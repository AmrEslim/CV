{"version":3,"sources":["components/Terminal/Terminal.js","components/ProfilePicture/ProfilePicture.js","components/Hero/Hero.js","components/About/About.js","components/Skills/Skills.js","components/Experience/TimelineItem.js","components/Experience/Experience.js","components/Projects/ProjectCard.js","components/Projects/Projects.js","components/RoboticsDiagram/RoboticsDiagram.js","components/Languages/Languages.js","components/Interests/Interests.js","components/Contact/Contact.js","components/Navigation/Navigation.js","components/RobotAssistant/RobotAssistant.js","components/CodeEditor/CodeEditor.js","components/Footer/Footer.js","components/CircuitBackground/CircuitBackground.js","components/CustomCursor/CustomCursor.js","App.js","index.js"],"names":["Terminal","_ref","lines","typingAnimation","cursorRef","useRef","useEffect","current","blinkInterval","setInterval","style","opacity","clearInterval","React","createElement","className","map","line","index","key","length","ref","ProfilePicture","frameRef","handleMouseMove","e","rect","getBoundingClientRect","x","clientX","left","width","rotateX","clientY","top","height","rotateY","transform","handleMouseLeave","frame","addEventListener","removeEventListener","src","alt","Hero","robotModelRef","y","id","HashLink","smooth","to","About","SkillMeter","name","percentage","progressRef","observer","IntersectionObserver","entries","isIntersecting","setTimeout","threshold","observe","unobserve","data-width","Array","_","Skills","TimelineItem","forwardRef","date","title","description","details","side","Experience","timelineItemsRef","forEach","entry","target","classList","add","rootMargin","item","el","ProjectVisual","type","position","background","border","borderRadius","right","bottom","ProjectCard","_ref2","project","visualType","technologies","tech","href","Projects","projectsRef","RoboticsDiagram","activeConnection","setActiveConnection","useState","simulationRunning","setSimulationRunning","robotRef","pathRef","robotParts","document","querySelectorAll","part","handlePartHover","handlePartLeave","partClass","onClick","startSimulation","transition","resetSimulation","LanguageItem","language","proficiency","itemRef","Languages","Interests","interest","Contact","animation","animationDelay","rel","onSubmit","preventDefault","console","log","placeholder","required","rows","Navigation","menuOpen","setMenuOpen","closeMenu","Fragment","toggleMenu","RobotAssistant","_tourSteps$tourState$","onRobotClick","eyesRef","containerRef","setPosition","savedPosition","localStorage","getItem","JSON","parse","window","innerWidth","innerHeight","tourState","setTourState","isGuiding","currentStep","message","isThinking","score","isMoving","showIntroDialog","viewport","setViewport","tourSteps","useNavigate","delay","robotRect","robotCenterX","robotCenterY","angleX","angleY","eye","setItem","stringify","handleResize","prev","Math","min","max","moveToPosition","duration","arguments","undefined","constrainedX","constrainedY","constrainPosition","pixelX","pixelY","startX","startY","startTime","Date","now","animate","elapsed","progress","easeProgress","pow","requestAnimationFrame","navigateToStep","stepIndex","step","element","querySelector","offset","elementPosition","pageYOffset","scrollTo","behavior","highlightElement","highlight","body","appendChild","remove","updateMessagePosition","messageContainer","containerRect","leftPos","handleClick","button","random","getMessage","substring","startTour","CodeEditor","isOpen","onClose","Footer","currentYear","getFullYear","CircuitBackground","backgroundRef","createCircuitBackground","innerHTML","i","lineWidth","node","lineHeight","CustomCursor","hidden","setHidden","enlarged","setEnlarged","updateCursorPosition","handleMouseOver","tagName","contains","handleMouseOut","App","codeEditorOpen","setCodeEditorOpen","progressBar","getAttribute","disconnect","Router","toggleCodeEditor","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.47e5950a.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './Terminal.css';\n\nconst Terminal = ({ lines = [], typingAnimation = false }) => {\n  const cursorRef = useRef(null);\n\n  useEffect(() => {\n    // Make terminal cursor blink\n    if (cursorRef.current) {\n      const blinkInterval = setInterval(() => {\n        if (cursorRef.current) {\n          cursorRef.current.style.opacity = cursorRef.current.style.opacity === '0' ? '1' : '0';\n        }\n      }, 500);\n      \n      return () => clearInterval(blinkInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"terminal\">\n      <div className=\"terminal-header\">\n        <div className=\"terminal-button close\"></div>\n        <div className=\"terminal-button minimize\"></div>\n        <div className=\"terminal-button maximize\"></div>\n      </div>\n      <div className=\"terminal-content\">\n        {lines.map((line, index) => (\n          <p \n            key={index} \n            className={index === lines.length - 1 && typingAnimation ? \"terminal-text\" : \"\"}\n          >\n            {line}\n          </p>\n        ))}\n        <div className=\"blinking-cursor\" ref={cursorRef}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Terminal;","import React, { useEffect, useRef } from 'react';\r\nimport './ProfilePicture.css';\r\n\r\nconst ProfilePicture = () => {\r\n  const frameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!frameRef.current) return;\r\n      \r\n      const rect = frameRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - rect.width / 2;\r\n      const y = e.clientY - rect.top - rect.height / 2;\r\n      \r\n      // Calculate rotation based on mouse position\r\n      const rotateX = (y / rect.height) * 20;\r\n      const rotateY = (x / rect.width) * 20;\r\n      \r\n      frameRef.current.style.transform = `perspective(1000px) rotateX(${-rotateX}deg) rotateY(${rotateY}deg)`;\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      if (frameRef.current) {\r\n        frameRef.current.style.transform = 'perspective(1000px) rotateX(0) rotateY(0)';\r\n      }\r\n    };\r\n\r\n    const frame = frameRef.current;\r\n    if (frame) {\r\n      frame.addEventListener('mousemove', handleMouseMove);\r\n      frame.addEventListener('mouseleave', handleMouseLeave);\r\n    }\r\n\r\n    return () => {\r\n      if (frame) {\r\n        frame.removeEventListener('mousemove', handleMouseMove);\r\n        frame.removeEventListener('mouseleave', handleMouseLeave);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-picture-container\" ref={frameRef}>\r\n      <div className=\"profile-frame\">\r\n        <div className=\"frame-corner top-left\"></div>\r\n        <div className=\"frame-corner top-right\"></div>\r\n        <div className=\"frame-corner bottom-left\"></div>\r\n        <div className=\"frame-corner bottom-right\"></div>\r\n        <div className=\"frame-edge top\"></div>\r\n        <div className=\"frame-edge right\"></div>\r\n        <div className=\"frame-edge bottom\"></div>\r\n        <div className=\"frame-edge left\"></div>\r\n        <div className=\"scanning-line\"></div>\r\n        <div className=\"profile-image\">\r\n          {/* Replace the src with your actual image path */}\r\n          <img src=\"/images/profile.jpg\" alt=\"Amr Eslim\" />\r\n        </div>\r\n        <div className=\"frame-overlay\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePicture;","import React, { useRef, useEffect } from 'react';\nimport { HashLink } from 'react-router-hash-link';\nimport Terminal from '../Terminal/Terminal';\nimport ProfilePicture from '../ProfilePicture/ProfilePicture';\nimport './Hero.css';\n\nconst Hero = () => {\n  const robotModelRef = useRef(null);\n\n  useEffect(() => {\n    if (robotModelRef.current) {\n      const handleMouseMove = (e) => {\n        const rect = robotModelRef.current.getBoundingClientRect();\n        const x = e.clientX - rect.left - rect.width / 2;\n        const y = e.clientY - rect.top - rect.height / 2;\n        \n        robotModelRef.current.style.transform = `rotateY(${x * 0.05}deg) rotateX(${-y * 0.05}deg)`;\n      };\n      \n      const handleMouseLeave = () => {\n        robotModelRef.current.style.transform = '';\n      };\n      \n      robotModelRef.current.addEventListener('mousemove', handleMouseMove);\n      robotModelRef.current.addEventListener('mouseleave', handleMouseLeave);\n      \n      return () => {\n        if (robotModelRef.current) {\n          robotModelRef.current.removeEventListener('mousemove', handleMouseMove);\n          robotModelRef.current.removeEventListener('mouseleave', handleMouseLeave);\n        }\n      };\n    }\n  }, []);\n\n  const terminalLines = [\n    \"> Hello, I'm Amr Eslim\",\n    \"> Computer Engineer & Embedded Systems Developer based in Berlin\",\n    \"> Recently graduated from HTW Berlin with a degree in Computer Engineering\",\n    \"> Specializing in Linux-based embedded systems and web applications\",\n    \"> Scroll down to explore my portfolio...\"\n  ];\n\n  return (\n    <section id=\"hero\" className=\"scene\">\n      <div className=\"content-container\">\n        <div className=\"hero-flex\">\n          <div className=\"hero-text\">\n            <h1>Amr Eslim</h1>\n            <p className=\"hero-subtitle\">Computer Engineer & <span className=\"title-effect\">Embedded Systems Developer</span></p>\n            \n            <Terminal lines={terminalLines} typingAnimation={true} />\n            \n            <div className=\"cta-buttons\">\n              <HashLink smooth to=\"#about\" className=\"cta-button\">EXPLORE</HashLink>\n              <HashLink smooth to=\"#contact\" className=\"cta-button\">CONNECT</HashLink>\n            </div>\n          </div>\n          \n          <div className=\"hero-profile\">\n            <ProfilePicture />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;","import React from 'react';\nimport Terminal from '../Terminal/Terminal';\nimport './About.css';\n\nconst About = () => {\n  const terminalLines = [\n    \"> Hello! I'm Amr Eslim, a Computer Engineering graduate based in Berlin, Germany.\",\n    \"> I recently completed my Bachelor's degree in Computer Engineering at HTW Berlin (April 2025) with a focus on embedded systems.\",\n    \"> My expertise lies in embedded systems with Linux, software development, and web application development.\",\n    \"> I have hands-on experience as a software development working student at Fraunhofer IPK since May 2022.\",\n    \"> With a strong background in C/C++, Python, and embedded systems, I build reliable and efficient solutions.\",\n    \"> I'm particularly interested in developing robotics systems that can seamlessly integrate with digital assistance systems.\",\n    \"> Let's build the future of robotics and embedded systems together!\"\n  ];\n\n  return (\n    <section id=\"about\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">ABOUT ME</h2>\n        <Terminal lines={terminalLines} typingAnimation={true} />\n      </div>\n    </section>\n  );\n};\n\nexport default About;","import React, { useEffect, useRef } from 'react';\nimport './Skills.css';\n\nconst SkillMeter = ({ name, percentage }) => {\n  const progressRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && progressRef.current) {\n          setTimeout(() => {\n            progressRef.current.style.width = `${percentage}%`;\n          }, 300);\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (progressRef.current) {\n      observer.observe(progressRef.current);\n    }\n\n    return () => {\n      if (progressRef.current) {\n        observer.unobserve(progressRef.current);\n      }\n    };\n  }, [percentage]);\n\n  return (\n    <div>\n      <p>{name}</p>\n      <div className=\"skill-meter\">\n        <div \n          className=\"skill-progress\" \n          ref={progressRef}\n          data-width={percentage}\n          style={{ width: '0%' }} // Start at 0, will be animated to the target width\n        >\n          <div className=\"skill-dots\">\n            {[...Array(10)].map((_, index) => (\n              <div className=\"skill-dot\" key={index}></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Skills = () => {\n  return (\n    <section id=\"skills\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">TECHNICAL SKILLS</h2>\n        <div className=\"circuit-board\">\n          <div className=\"chip\">\n            <h3 className=\"chip-title\">Programming Languages</h3>\n            <SkillMeter name=\"C/C++\" percentage={90} />\n            <SkillMeter name=\"Python\" percentage={85} />\n          </div>\n          \n          <div className=\"chip\">\n            <h3 className=\"chip-title\">Web Development</h3>\n            <SkillMeter name=\"HTML/CSS/JavaScript\" percentage={80} />\n            <SkillMeter name=\"Flask\" percentage={75} />\n            <SkillMeter name=\"React.js\" percentage={70} />\n          </div>\n          \n          <div className=\"chip\">\n            <h3 className=\"chip-title\">Tools & Technologies</h3>\n            <SkillMeter name=\"Git\" percentage={85} />\n            <SkillMeter name=\"Linux\" percentage={90} />\n            <SkillMeter name=\"Docker\" percentage={75} />\n          </div>\n          \n          <div className=\"chip\">\n            <h3 className=\"chip-title\">Embedded Systems</h3>\n            <SkillMeter name=\"Embedded Linux Systems\" percentage={85} />\n            <SkillMeter name=\"SQL\" percentage={75} />\n            <SkillMeter name=\"Digital Assistance Systems\" percentage={80} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;","import React, { forwardRef } from 'react';\n\nconst TimelineItem = forwardRef(({ date, title, description, details, side }, ref) => {\n  return (\n    <div \n      className={`timeline-item ${side}`} \n      ref={ref}\n    >\n      <div className=\"timeline-content\">\n        <div className=\"timeline-date\">{date}</div>\n        <h3 className=\"timeline-title\">{title}</h3>\n        <p>{description}</p>\n        <p>{details}</p>\n      </div>\n    </div>\n  );\n});\n\nexport default TimelineItem;","import React, { useEffect, useRef } from 'react';\nimport TimelineItem from './TimelineItem';\nimport './Experience.css';\n\nconst Experience = () => {\n  const timelineItemsRef = useRef([]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('visible');\n          }\n        });\n      },\n      { \n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    timelineItemsRef.current.forEach(item => {\n      if (item) {\n        observer.observe(item);\n      }\n    });\n\n    return () => {\n      timelineItemsRef.current.forEach(item => {\n        if (item) {\n          observer.unobserve(item);\n        }\n      });\n    };\n  }, []);\n\n  const experienceData = [\n    {\n      id: 1,\n      date: \"04/2021 – 04/2025\",\n      title: \"Bachelor's Degree in Computer Engineering\",\n      description: \"HTW Berlin (Hochschule für Technik und Wirtschaft)\",\n      details: \"Focus areas: Computer Science, Hardware, Networks, Computer-controlled devices and systems\",\n      side: \"left\"\n    },\n    {\n      id: 2,\n      date: \"05/2022 – Present\",\n      title: \"Working Student (Software Development)\",\n      description: \"Fraunhofer IPK, Berlin\",\n      details: \"Working with Embedded Systems with Linux, developing web-based applications and dashboards, implementing backend functionalities, and supporting the conception and implementation of digital assistance systems.\",\n      side: \"right\"\n    },\n    {\n      id: 3,\n      date: \"12/2019 – 12/2023\",\n      title: \"Volunteer\",\n      description: \"Medibüro, Berlin\",\n      details: \"Medical liaison for people without residence status and health insurance through qualified medical professionals. Regular processing of incoming mail.\",\n      side: \"left\"\n    },\n    {\n      id: 4,\n      date: \"02/2020\",\n      title: \"Hackathon: Future of Education\",\n      description: \"N3XTCODER GmbH\",\n      details: \"Worked with a team on the on-boarding process for a mentoring app for teenagers who identify as LGBTQIA. Our goal was to ensure a smooth process. We presented our results to the audience.\",\n      side: \"right\"\n    },\n    {\n      id: 5,\n      date: \"09/2018 – 06/2019\",\n      title: \"Preparatory Year for Medical Faculty\",\n      description: \"Damascus University, Syria\",\n      details: \"Studies in Anatomy, Biochemistry, General Medicine, and Neurology\",\n      side: \"left\"\n    },\n    {\n      id: 6,\n      date: \"10/2015 – 06/2018\",\n      title: \"High School\",\n      description: \"Shakib Arslan School, Syria\",\n      details: \"Focus on Physics, Math, Chemistry, Biology, English, Arabic, and French\",\n      side: \"right\"\n    }\n  ];\n\n  return (\n    <section id=\"experience\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">EDUCATION & EXPERIENCE</h2>\n        <div className=\"timeline\">\n          {experienceData.map((item, index) => (\n            <TimelineItem\n              key={item.id}\n              date={item.date}\n              title={item.title}\n              description={item.description}\n              details={item.details}\n              side={item.side}\n              ref={el => timelineItemsRef.current[index] = el}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Experience;","import React, { forwardRef } from 'react';\nimport './ProjectCard.css';\n\nconst ProjectVisual = ({ type }) => {\n  // Different visual representations based on project type\n  switch (type) {\n    case 'embedded-system':\n      return (\n        <div className=\"project-robot\">\n          <div style={{ width: '120px', height: '80px', position: 'relative' }}>\n            <div style={{ width: '80px', height: '50px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '5px', position: 'absolute', top: '15px', left: '20px' }}></div>\n            <div style={{ width: '15px', height: '15px', background: 'var(--robot-primary)', borderRadius: '50%', position: 'absolute', top: '30px', left: '30px' }}></div>\n            <div style={{ width: '15px', height: '15px', background: 'var(--robot-primary)', borderRadius: '50%', position: 'absolute', top: '30px', right: '30px' }}></div>\n            <div style={{ width: '30px', height: '8px', background: 'var(--robot-primary)', position: 'absolute', top: '50px', left: '45px' }}></div>\n          </div>\n        </div>\n      );\n    case 'web-dashboard':\n      return (\n        <div className=\"project-robot\">\n          <div style={{ width: '120px', height: '80px', position: 'relative' }}>\n            <div style={{ width: '90px', height: '60px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '5px', position: 'absolute', top: '10px', left: '15px' }}></div>\n            <div style={{ width: '80px', height: '10px', background: 'var(--robot-primary)', position: 'absolute', top: '20px', left: '20px' }}></div>\n            <div style={{ width: '40px', height: '5px', background: 'var(--robot-primary)', position: 'absolute', top: '35px', left: '20px' }}></div>\n            <div style={{ width: '40px', height: '5px', background: 'var(--robot-primary)', position: 'absolute', top: '45px', left: '20px' }}></div>\n            <div style={{ width: '25px', height: '25px', background: 'var(--robot-primary)', borderRadius: '50%', position: 'absolute', top: '32px', right: '25px' }}></div>\n          </div>\n        </div>\n      );\n    case 'mentoring-app':\n      return (\n        <div className=\"project-robot\">\n          <div style={{ width: '120px', height: '80px', position: 'relative' }}>\n            <div style={{ width: '40px', height: '70px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '10px', position: 'absolute', top: '5px', left: '40px' }}></div>\n            <div style={{ width: '30px', height: '5px', background: 'var(--robot-primary)', position: 'absolute', top: '15px', left: '45px' }}></div>\n            <div style={{ width: '30px', height: '5px', background: 'var(--robot-primary)', position: 'absolute', top: '25px', left: '45px' }}></div>\n            <div style={{ width: '30px', height: '30px', background: 'var(--robot-primary)', borderRadius: '50%', position: 'absolute', top: '35px', left: '45px' }}></div>\n          </div>\n        </div>\n      );\n    case 'backend-system':\n      return (\n        <div className=\"project-robot\">\n          <div style={{ width: '120px', height: '80px', position: 'relative' }}>\n            <div style={{ width: '80px', height: '60px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '5px', position: 'absolute', top: '10px', left: '20px' }}></div>\n            <div style={{ width: '15px', height: '15px', background: 'var(--robot-primary)', borderRadius: '3px', position: 'absolute', top: '20px', left: '30px' }}></div>\n            <div style={{ width: '15px', height: '15px', background: 'var(--robot-primary)', borderRadius: '3px', position: 'absolute', top: '20px', right: '30px' }}></div>\n            <div style={{ width: '15px', height: '15px', background: 'var(--robot-primary)', borderRadius: '3px', position: 'absolute', bottom: '20px', left: '30px' }}></div>\n            <div style={{ width: '15px', height: '15px', background: 'var(--robot-primary)', borderRadius: '3px', position: 'absolute', bottom: '20px', right: '30px' }}></div>\n            <div style={{ width: '20px', height: '1px', background: 'var(--robot-primary)', position: 'absolute', top: '28px', left: '40px' }}></div>\n            <div style={{ width: '1px', height: '20px', background: 'var(--robot-primary)', position: 'absolute', top: '30px', left: '60px' }}></div>\n            <div style={{ width: '20px', height: '1px', background: 'var(--robot-primary)', position: 'absolute', bottom: '28px', left: '40px' }}></div>\n          </div>\n        </div>\n      );\n    default:\n      return <div className=\"project-robot\"></div>;\n  }\n};\n\nconst ProjectCard = forwardRef(({ project }, ref) => {\n  return (\n    <div className=\"robot-project\" ref={ref}>\n      <div className=\"project-image\">\n        <ProjectVisual type={project.visualType} />\n      </div>\n      <div className=\"project-details\">\n        <h3 className=\"project-title\">{project.title}</h3>\n        <p>{project.description}</p>\n        <div className=\"project-tech\">\n          {project.technologies.map((tech, index) => (\n            <span className=\"tech-tag\" key={index}>{tech}</span>\n          ))}\n        </div>\n        <div className=\"project-links\">\n          <a href=\"#\" className=\"project-link\">Details</a>\n          <a href=\"#\" className=\"project-link\">Demo</a>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default ProjectCard;","import React, { useEffect, useRef } from 'react';\nimport ProjectCard from './ProjectCard';\nimport './Projects.css';\n\nconst Projects = () => {\n  const projectsRef = useRef([]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('visible');\n          }\n        });\n      },\n      { \n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    projectsRef.current.forEach(project => {\n      if (project) {\n        observer.observe(project);\n      }\n    });\n\n    return () => {\n      projectsRef.current.forEach(project => {\n        if (project) {\n          observer.unobserve(project);\n        }\n      });\n    };\n  }, []);\n\n  const projectsData = [\n    {\n      id: 1,\n      title: \"Digital Assistance System\",\n      description: \"Developed at Fraunhofer IPK, this system uses embedded Linux to provide real-time assistance and monitoring for industrial applications.\",\n      technologies: [\"Linux\", \"C++\", \"Python\", \"Web Development\"],\n      visualType: \"embedded-system\"\n    },\n    {\n      id: 2,\n      title: \"Web-Based Dashboard Application\",\n      description: \"Created interactive web dashboards for monitoring and controlling embedded systems, with real-time data visualization and user-friendly interfaces.\",\n      technologies: [\"Flask\", \"React.js\", \"JavaScript\", \"HTML/CSS\"],\n      visualType: \"web-dashboard\"\n    },\n    {\n      id: 3,\n      title: \"LGBTQIA+ Mentoring App\",\n      description: \"Hackathon project focused on creating a smooth onboarding process for a mentoring app designed for LGBTQIA+ teenagers, emphasizing user experience and inclusivity.\",\n      technologies: [\"UX Design\", \"Frontend Development\", \"User Testing\", \"Prototyping\"],\n      visualType: \"mentoring-app\"\n    },\n    {\n      id: 4,\n      title: \"Backend System Architecture\",\n      description: \"Designed and implemented backend functionalities for embedded systems applications, focusing on performance, reliability, and seamless integration with frontend interfaces.\",\n      technologies: [\"Python\", \"SQL\", \"API Design\", \"System Architecture\"],\n      visualType: \"backend-system\"\n    }\n  ];\n\n  return (\n    <section id=\"projects\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">PROJECTS</h2>\n        <div className=\"robotics-projects\">\n          {projectsData.map((project, index) => (\n            <ProjectCard\n              key={project.id}\n              project={project}\n              ref={el => projectsRef.current[index] = el}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;","import React, { useState, useEffect, useRef } from 'react';\nimport Terminal from '../Terminal/Terminal';\nimport './RoboticsDiagram.css';\n\nconst RoboticsDiagram = () => {\n  const [activeConnection, setActiveConnection] = useState(null);\n  const [simulationRunning, setSimulationRunning] = useState(false);\n  const robotRef = useRef(null);\n  const pathRef = useRef(null);\n\n  useEffect(() => {\n    // Setup tooltips and connections\n    const robotParts = document.querySelectorAll('.robot-part');\n    robotParts.forEach(part => {\n      part.addEventListener('mouseenter', handlePartHover);\n      part.addEventListener('mouseleave', handlePartLeave);\n    });\n\n    return () => {\n      robotParts.forEach(part => {\n        part.removeEventListener('mouseenter', handlePartHover);\n        part.removeEventListener('mouseleave', handlePartLeave);\n      });\n    };\n  }, []);\n\n  const handlePartHover = (e) => {\n    // Highlight connected traces\n    const partClass = e.target.classList[1]; // e.g., \"cpu\", \"sensors\"\n    if (partClass) {\n      setActiveConnection(`connection-cpu-${partClass}`);\n    }\n  };\n\n  const handlePartLeave = () => {\n    setActiveConnection(null);\n  };\n\n  const startSimulation = () => {\n    if (!simulationRunning) {\n      setSimulationRunning(true);\n      \n      // Show path\n      if (pathRef.current) {\n        pathRef.current.style.transform = 'scaleX(1)';\n        pathRef.current.style.width = '380px';\n      }\n      \n      // Move robot\n      setTimeout(() => {\n        if (robotRef.current) {\n          robotRef.current.style.transition = 'left 4s ease-in-out';\n          robotRef.current.style.left = '400px';\n        }\n      }, 300);\n    }\n  };\n\n  const resetSimulation = () => {\n    setSimulationRunning(false);\n    \n    // Reset path\n    if (pathRef.current) {\n      pathRef.current.style.transform = 'scaleX(0)';\n    }\n    \n    // Reset robot\n    if (robotRef.current) {\n      robotRef.current.style.transition = 'left 0.5s ease-in-out';\n      robotRef.current.style.left = '20px';\n    }\n  };\n\n  const terminalLines = [\n    \"> System booted successfully\",\n    \"> OS: Linux-based embedded system\",\n    \"> CPU: ARM Cortex-A53 @ 1.2GHz\",\n    \"> RAM: 1GB LPDDR4\",\n    \"> Storage: 16GB eMMC Flash\",\n    \"> Interface: 3 x USB, 1 x HDMI, GPIO, I2C, SPI\",\n    \"> Network: WiFi 802.11ac, Bluetooth 5.0, Ethernet\",\n    \"> Running diagnostics...\"\n  ];\n\n  return (\n    <section id=\"robotics-diagram\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">EMBEDDED SYSTEMS ARCHITECTURE</h2>\n        <p>Explore the key components of embedded systems architecture I work with. Click on components to learn more.</p>\n        \n        <div className=\"robot-diagram-container\">\n          <div className=\"robot-diagram\">\n            <div className=\"robot-part cpu\">\n              <p>Central Processing</p>\n            </div>\n            <div className=\"robot-part-tooltip\" style={{ top: '30%', left: '60%' }}>\n              <h4>Main CPU/Controller</h4>\n              <p>Handles high-level processing, data management, and system coordination. Typically running Linux with custom software stacks for embedded applications.</p>\n            </div>\n            \n            <div className=\"robot-part sensors\">\n              <p>Input Systems</p>\n            </div>\n            <div className=\"robot-part-tooltip\" style={{ top: '15%', left: '30%' }}>\n              <h4>Sensor & Input</h4>\n              <p>Manages data acquisition from various sensors and input devices. Processes environmental data and user interactions for system response.</p>\n            </div>\n            \n            <div className=\"robot-part communication\">\n              <p>Communication</p>\n            </div>\n            <div className=\"robot-part-tooltip\" style={{ top: '15%', right: '30%' }}>\n              <h4>Networking & Comms</h4>\n              <p>Handles Wi-Fi, Bluetooth, and other communication protocols. Manages data transfer between components and external systems securely and efficiently.</p>\n            </div>\n            \n            <div className=\"robot-part motor-controller\">\n              <p>Output Systems</p>\n            </div>\n            <div className=\"robot-part-tooltip\" style={{ bottom: '25%', left: '30%' }}>\n              <h4>Output & Control</h4>\n              <p>Manages system outputs including displays, indicators, and control signals. Implements precise timing mechanisms and feedback control loops.</p>\n            </div>\n            \n            <div className=\"robot-part power\">\n              <p>Power Management</p>\n            </div>\n            <div className=\"robot-part-tooltip\" style={{ bottom: '25%', right: '30%' }}>\n              <h4>Power Systems</h4>\n              <p>Manages power distribution, battery monitoring, and implements energy-efficient operations for extended system lifespan and reliability.</p>\n            </div>\n            \n            <div className={`robot-connection vert-connection connection-cpu-sensors ${activeConnection === 'connection-cpu-sensors' ? 'active' : ''}`}></div>\n            <div className={`robot-connection vert-connection connection-cpu-motors ${activeConnection === 'connection-cpu-motors' ? 'active' : ''}`}></div>\n            <div className={`robot-connection vert-connection connection-cpu-communication ${activeConnection === 'connection-cpu-communication' ? 'active' : ''}`}></div>\n            <div className={`robot-connection vert-connection connection-cpu-power ${activeConnection === 'connection-cpu-power' ? 'active' : ''}`}></div>\n          </div>\n        </div>\n        \n        <div className=\"robot-simulation\">\n          <div className=\"simulation-robot\" ref={robotRef}>\n            <div className=\"simulation-sensor\"></div>\n          </div>\n          <div className=\"simulation-obstacle obstacle-1\"></div>\n          <div className=\"simulation-obstacle obstacle-2\"></div>\n          <div className=\"simulation-obstacle obstacle-3\"></div>\n          <div className=\"simulation-path\" ref={pathRef}></div>\n          <div className=\"simulation-control\">\n            <div className=\"control-btn\" onClick={startSimulation}>▶</div>\n            <div className=\"control-btn\" onClick={resetSimulation}>↺</div>\n          </div>\n        </div>\n        \n        <Terminal lines={terminalLines} />\n      </div>\n    </section>\n  );\n};\n\nexport default RoboticsDiagram;","import React, { useEffect, useRef } from 'react';\nimport './Languages.css';\n\nconst LanguageItem = ({ language, proficiency, percentage }) => {\n  const itemRef = useRef(null);\n  const progressRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          itemRef.current.classList.add('visible');\n          \n          if (progressRef.current) {\n            setTimeout(() => {\n              progressRef.current.style.width = `${percentage}%`;\n            }, 300);\n          }\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    if (itemRef.current) {\n      observer.observe(itemRef.current);\n    }\n\n    return () => {\n      if (itemRef.current) {\n        observer.unobserve(itemRef.current);\n      }\n    };\n  }, [percentage]);\n\n  return (\n    <div className=\"language-item\" ref={itemRef}>\n      <h3 className=\"language-name\">{language}</h3>\n      <p>{proficiency}</p>\n      <div className=\"skill-meter\">\n        <div \n          className=\"skill-progress\" \n          ref={progressRef} \n          data-width={percentage}\n          style={{ width: '0%' }}\n        >\n          <div className=\"skill-dots\">\n            {[...Array(10)].map((_, index) => (\n              <div className=\"skill-dot\" key={index}></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Languages = () => {\n  const languagesData = [\n    {\n      id: 1,\n      language: \"English\",\n      proficiency: \"Fließend (in Wort und Schrift)\",\n      percentage: 95\n    },\n    {\n      id: 2,\n      language: \"Arabic\",\n      proficiency: \"Fließend (in Wort und Schrift)\",\n      percentage: 100\n    },\n    {\n      id: 3,\n      language: \"German\",\n      proficiency: \"Fließend (in Wort und Schrift)\",\n      percentage: 90\n    },\n    {\n      id: 4,\n      language: \"Spanish\",\n      proficiency: \"Beginner/Basic proficiency\",\n      percentage: 30\n    }\n  ];\n\n  return (\n    <section id=\"languages\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">LANGUAGES</h2>\n        <div className=\"languages-container\">\n          {languagesData.map(item => (\n            <LanguageItem\n              key={item.id}\n              language={item.language}\n              proficiency={item.proficiency}\n              percentage={item.percentage}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Languages;","import React from 'react';\nimport './Interests.css';\n\nconst Interests = () => {\n  const interests = [\n    \"Musik\", \n    \"Fußball\", \n    \"Schwimmen\", \n    \"Kochen\", \n    \"Reisen\", \n    \"Sprachen lernen\", \n    \"Robotics Development\", \n    \"Embedded Systems\", \n    \"Digital Assistance Systems\"\n  ];\n\n  return (\n    <section id=\"interests\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">PERSONAL INTERESTS</h2>\n        <div className=\"interests-container\">\n          {interests.map((interest, index) => (\n            <div className=\"interest-item\" key={index}>\n              {interest}\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Interests;","import React from 'react';\nimport Terminal from '../Terminal/Terminal';\nimport './Contact.css';\n\nconst Contact = () => {\n  const terminalLines = [\n    \"> user@amr-eslim:~$ contact --info\",\n    \"> Email: Eslim.amr@gmail.com\",\n    \"> Phone: +49 176 42743800\",\n    \"> LinkedIn: www.linkedin.com/in/amr-eslim\",\n    \"> Location: Berlin, Germany\",\n    \"> user@amr-eslim:~$ _\"\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Form submission logic would go here\n    console.log('Form submitted');\n  };\n\n  return (\n    <section id=\"contact\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">CONTACT</h2>\n        \n        <Terminal lines={terminalLines} />\n        \n        <div className=\"contact-container\">\n          <div className=\"contact-robot\">\n            {/* Small animated robot */}\n            <div style={{ width: '80px', height: '120px', position: 'relative' }}>\n              <div style={{ width: '40px', height: '40px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '10px', position: 'absolute', top: '0', left: '20px', animation: 'float 3s infinite alternate' }}></div>\n              <div style={{ width: '60px', height: '40px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '5px', position: 'absolute', top: '40px', left: '10px', animation: 'float 3s infinite alternate', animationDelay: '0.5s' }}></div>\n              <div style={{ width: '15px', height: '30px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', position: 'absolute', top: '50px', left: '0', animation: 'wave 2s infinite' }}></div>\n              <div style={{ width: '15px', height: '30px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', position: 'absolute', top: '50px', right: '0', animation: 'wave 2s infinite', animationDelay: '1s' }}></div>\n            </div>\n          </div>\n          <div className=\"contact-text\">\n            <p>I'm currently looking for new opportunities in robotics and autonomous systems development. Whether you have a question about robotics, want to collaborate on a project, or just want to say hi, I'll do my best to get back to you!</p>\n          </div>\n          <div className=\"contact-buttons\">\n            <a href=\"mailto:Eslim.amr@gmail.com\" className=\"cta-button\">Email Me</a>\n            <a href=\"https://www.linkedin.com/in/amr-eslim\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"cta-button\">LinkedIn</a>\n          </div>\n          \n          <div className=\"contact-form\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" required />\n              </div>\n              <div className=\"form-group\">\n                <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" required />\n              </div>\n              <div className=\"form-group\">\n                <textarea className=\"form-control\" rows=\"5\" placeholder=\"Your Message\" required></textarea>\n              </div>\n              <button type=\"submit\" className=\"cta-button\">Send Message</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;","import React, { useState } from 'react';\nimport { HashLink } from 'react-router-hash-link';\nimport './Navigation.css';\n\nconst Navigation = () => {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  const closeMenu = () => {\n    setMenuOpen(false);\n  };\n\n  return (\n    <>\n      <div className=\"nav-container\">\n        <button className=\"nav-toggle\" onClick={toggleMenu}>☰</button>\n      </div>\n      \n      <nav className={`nav-menu ${menuOpen ? 'active' : ''}`}>\n        <button className=\"nav-close\" onClick={closeMenu}>✕</button>\n        <ul className=\"nav-links\">\n          <li><HashLink smooth to=\"#hero\" onClick={closeMenu}>Home</HashLink></li>\n          <li><HashLink smooth to=\"#about\" onClick={closeMenu}>About</HashLink></li>\n          <li><HashLink smooth to=\"#skills\" onClick={closeMenu}>Technical Skills</HashLink></li>\n          <li><HashLink smooth to=\"#experience\" onClick={closeMenu}>Education & Experience</HashLink></li>\n          <li><HashLink smooth to=\"#projects\" onClick={closeMenu}>Projects</HashLink></li>\n          <li><HashLink smooth to=\"#robotics-diagram\" onClick={closeMenu}>System Architecture</HashLink></li>\n          <li><HashLink smooth to=\"#languages\" onClick={closeMenu}>Languages</HashLink></li>\n          <li><HashLink smooth to=\"#interests\" onClick={closeMenu}>Interests</HashLink></li>\n          <li><HashLink smooth to=\"#contact\" onClick={closeMenu}>Contact</HashLink></li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default Navigation;","import React, { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './RobotAssistant.css';\n\nconst RobotAssistant = ({ onRobotClick }) => {\n  const robotRef = useRef(null);\n  const eyesRef = useRef([]);\n  const containerRef = useRef(null);\n  \n  // Initialize position from localStorage or default values\n  const [position, setPosition] = useState(() => {\n    const savedPosition = localStorage.getItem('robotPosition');\n    return savedPosition ? JSON.parse(savedPosition) : {\n      x: window.innerWidth - 200,\n      y: window.innerHeight - 200  // Adjusted to be further down from the top\n    };\n  });\n  \n  const [tourState, setTourState] = useState({\n    isGuiding: false,\n    currentStep: -1, // -1 means not started\n    message: '',\n    isThinking: false,\n    score: 0,\n    isMoving: false,\n    showIntroDialog: false\n  });\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const navigate = useNavigate();\n\n  const tourSteps = [\n    {\n      title: \"👋 Introduction\",\n      message: \"I'm your friendly robot assistant! Let me guide you through this portfolio and show you all the cool features!\",\n      target: null,\n      position: { x: 70, y: 50 },\n      delay: 3000\n    },\n    {\n      title: \"🚀 Hero Section\",\n      message: \"Welcome to Amr's portfolio! I was built using React and advanced CSS animations. Pretty cool, right?\",\n      target: \"#hero\",\n      position: { x: 20, y: 30 },\n      delay: 4000\n    },\n    {\n      title: \"💻 Technical Skills\",\n      message: \"These interactive chips represent my creator's technical skills. Try hovering over them to see detailed descriptions!\",\n      target: \"#skills\",\n      position: { x: 80, y: 40 },\n      delay: 5000\n    },\n    {\n      title: \"🏗️ Projects Showcase\",\n      message: \"Check out these awesome projects! Each card is interactive and reveals more details when you interact with it.\",\n      target: \"#projects\",\n      position: { x: 20, y: 50 },\n      delay: 5000\n    },\n    {\n      title: \"📈 Experience Timeline\",\n      message: \"Here's our journey through time! Watch how each milestone animates as you scroll through.\",\n      target: \"#experience\",\n      position: { x: 75, y: 40 },\n      delay: 4000\n    },\n    {\n      title: \"🤖 System Architecture\",\n      message: \"This is my brain! An interactive diagram showing how I'm built. Try clicking on different components!\",\n      target: \"#robotics-diagram\",\n      position: { x: 25, y: 60 },\n      delay: 5000\n    },\n    {\n      title: \"🌍 Languages\",\n      message: \"We speak multiple languages! Each bar shows proficiency levels with cool animations.\",\n      target: \"#languages\",\n      position: { x: 80, y: 50 },\n      delay: 4000\n    },\n    {\n      title: \"🎯 Interests\",\n      message: \"Discover our passions and interests. These cards light up as you explore them!\",\n      target: \"#interests\",\n      position: { x: 20, y: 70 },\n      delay: 4000\n    },\n    {\n      title: \"📬 Let's Connect\",\n      message: \"Want to get in touch? You can find all contact information here. I'd love to hear from you!\",\n      target: \"#contact\",\n      position: { x: 70, y: 60 },\n      delay: 4000\n    }\n  ];\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (robotRef.current && containerRef.current) {\n        const robotRect = robotRef.current.getBoundingClientRect();\n        const robotCenterX = robotRect.left + robotRect.width / 2;\n        const robotCenterY = robotRect.top + robotRect.height / 2;\n        \n        const angleX = (e.clientX - robotCenterX) / window.innerWidth * 5;\n        const angleY = (e.clientY - robotCenterY) / window.innerHeight * 5;\n        \n        eyesRef.current.forEach(eye => {\n          if (eye) {\n            eye.style.transform = `translate(${angleX}px, ${angleY}px)`;\n          }\n        });\n        \n        if (containerRef.current) {\n          containerRef.current.style.transform = `rotateY(${angleX * 5}deg) rotateX(${-angleY * 2}deg)`;\n        }\n      }\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    return () => document.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n\n  // Save position to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('robotPosition', JSON.stringify(position));\n  }, [position]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      \n      // Adjust position if robot is outside viewport after resize\n      setPosition(prev => ({\n        x: Math.min(Math.max(0, prev.x), window.innerWidth - 200),\n        y: Math.min(Math.max(0, prev.y), window.innerHeight - 270)\n      }));\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const constrainPosition = (x, y) => {\n    // Convert percentage to pixels for precise boundary checking\n    const pixelX = (x / 100) * viewport.width;\n    const pixelY = (y / 100) * viewport.height;\n    \n    // Constrain to viewport boundaries considering robot dimensions\n    const constrainedX = Math.min(Math.max(0, pixelX), viewport.width - 200);\n    const constrainedY = Math.min(Math.max(0, pixelY), viewport.height - 270);\n    \n    // Convert back to percentages\n    return {\n      x: (constrainedX / viewport.width) * 100,\n      y: (constrainedY / viewport.height) * 100\n    };\n  };\n\n  const moveToPosition = (x, y, duration = 1000) => {\n    setTourState(prev => ({ ...prev, isMoving: true }));\n    \n    const { x: constrainedX, y: constrainedY } = constrainPosition(x, y);\n    const startX = position.x;\n    const startY = position.y;\n    const startTime = Date.now();\n    \n    const animate = () => {\n      const currentTime = Date.now();\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      // Easing function for smooth movement\n      const easeProgress = 1 - Math.pow(1 - progress, 3);\n      \n      const newX = startX + (constrainedX - startX) * easeProgress;\n      const newY = startY + (constrainedY - startY) * easeProgress;\n      \n      setPosition({ x: newX, y: newY });\n      \n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        setTourState(prev => ({ ...prev, isMoving: false }));\n      }\n    };\n    \n    requestAnimationFrame(animate);\n  };\n\n  const showIntroDialog = () => {\n    setTourState(prev => ({\n      ...prev,\n      showIntroDialog: true,\n      message: \"Would you like me to guide you through this portfolio? I can show you all the cool features!\"\n    }));\n  };\n\n  const startTour = () => {\n    setTourState(prev => ({\n      ...prev,\n      isGuiding: true,\n      currentStep: 0,\n      showIntroDialog: false\n    }));\n    \n    onRobotClick(); // Open code editor when tour starts\n    navigateToStep(0);\n  };\n\n  const navigateToStep = (stepIndex) => {\n    const step = tourSteps[stepIndex];\n    \n    setTourState(prev => ({\n      ...prev,\n      currentStep: stepIndex,\n      message: step.message,\n      isThinking: true\n    }));\n\n    // Move robot to position\n    moveToPosition(step.position.x, step.position.y);\n\n    // Scroll to target if exists\n    if (step.target) {\n      const element = document.querySelector(step.target);\n      if (element) {\n        // Smooth scroll with offset\n        const offset = window.innerHeight * 0.2;\n        const elementPosition = element.getBoundingClientRect().top + window.pageYOffset;\n        window.scrollTo({\n          top: elementPosition - offset,\n          behavior: 'smooth'\n        });\n        \n        highlightElement(element);\n      }\n    }\n\n    setTimeout(() => {\n      setTourState(prev => ({ ...prev, isThinking: false }));\n\n      // Move to next step after delay if not last step\n      if (stepIndex < tourSteps.length - 1) {\n        setTimeout(() => {\n          navigateToStep(stepIndex + 1);\n        }, step.delay);\n      }\n    }, 1000);\n  };\n\n  const nextTourStep = () => {\n    if (tourState.currentStep < tourSteps.length - 1) {\n      const nextStep = tourState.currentStep + 1;\n      const step = tourSteps[nextStep];\n      \n      setTourState(prev => ({\n        ...prev,\n        currentStep: nextStep,\n        message: step.message,\n        isThinking: true,\n        score: prev.score + 10\n      }));\n\n      moveToPosition(step.position.x, step.position.y);\n\n      if (step.target) {\n        const element = document.querySelector(step.target);\n        if (element) {\n          element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          highlightElement(element);\n        }\n      }\n\n      setTimeout(() => {\n        setTourState(prev => ({ ...prev, isThinking: false }));\n      }, 1000);\n\n      // Automatically move to next step after delay\n      if (nextStep < tourSteps.length - 1) {\n        setTimeout(() => {\n          nextTourStep();\n        }, step.delay);\n      }\n    }\n  };\n\n  const highlightElement = (element) => {\n    const highlight = document.createElement('div');\n    highlight.className = 'section-highlight';\n    const rect = element.getBoundingClientRect();\n    \n    highlight.style.position = 'fixed';\n    highlight.style.top = `${rect.top - 10}px`;\n    highlight.style.left = `${rect.left - 10}px`;\n    highlight.style.width = `${rect.width + 20}px`;\n    highlight.style.height = `${rect.height + 20}px`;\n    \n    document.body.appendChild(highlight);\n    setTimeout(() => highlight.remove(), 3000);\n  };\n\n  const handleClick = () => {\n    if (!tourState.isGuiding) {\n      if (!tourState.showIntroDialog) {\n        showIntroDialog();  // Just show the dialog, don't open code editor\n      }\n    }\n    \n    // Activate random buttons for visual effect\n    const buttons = document.querySelectorAll('.robot-button');\n    buttons.forEach(button => {\n      if (Math.random() > 0.5) {\n        button.classList.add('active');\n        setTimeout(() => button.classList.remove('active'), 500);\n      }\n    });\n  };\n\n  const getMessage = () => {\n    if (tourState.showIntroDialog) {\n      return \"Would you like me to guide you through this portfolio? [Click me to start the tour!]\";\n    }\n    const message = tourState.message || \"Hey there! Click me for an interactive tour!\";\n    // Ensure message isn't too long\n    return message.length > 150 ? message.substring(0, 147) + '...' : message;\n  };\n\n  useEffect(() => {\n    const updateMessagePosition = () => {\n      const messageContainer = document.querySelector('.robot-message-container');\n      if (messageContainer) {\n        const robotRect = robotRef.current.getBoundingClientRect();\n        const containerRect = messageContainer.getBoundingClientRect();\n        \n        let leftPos = robotRect.left + (robotRect.width / 2);\n        leftPos = Math.min(Math.max(containerRect.width / 2 + 20, leftPos), \n                          window.innerWidth - (containerRect.width / 2 + 20));\n        \n        messageContainer.style.left = `${leftPos}px`;\n      }\n    };\n\n    window.addEventListener('resize', updateMessagePosition);\n    // Update position whenever message changes\n    if (tourState.message || tourState.showIntroDialog) {\n      setTimeout(updateMessagePosition, 100);\n    }\n\n    return () => window.removeEventListener('resize', updateMessagePosition);\n  }, [tourState.message, tourState.showIntroDialog]);\n\n  return (\n    <div \n      id=\"robot-assistant\" \n      ref={robotRef} \n      onClick={handleClick}\n      style={{\n        position: 'fixed',\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n        transform: 'none'\n      }}\n      className={`${tourState.isMoving ? 'moving' : ''} ${tourState.showIntroDialog ? 'showing-dialog' : ''}`}\n    >\n      <div className=\"robot-container\" ref={containerRef}>\n        <div className={`robot-head ${tourState.isGuiding ? 'guiding' : ''}`}>\n          <div className=\"robot-antenna\"></div>\n          <div className=\"robot-eye-container\">\n            <div className=\"robot-eye\">\n              <div className=\"robot-pupil\" ref={el => eyesRef.current[0] = el}></div>\n            </div>\n            <div className=\"robot-eye\">\n              <div className=\"robot-pupil\" ref={el => eyesRef.current[1] = el}></div>\n            </div>\n          </div>\n          <div className=\"robot-mouth\">\n            <div className=\"robot-mouth-line\"></div>\n          </div>\n        </div>\n        \n        <div className=\"robot-body\">\n          <div className=\"robot-body-display\">\n            <div className={`robot-display-text ${tourState.isThinking ? 'thinking' : ''}`}>\n              {getMessage()}\n            </div>\n          </div>\n          <div className=\"robot-controls\">\n            <div className=\"robot-button\"></div>\n            <div className=\"robot-button\"></div>\n            <div className=\"robot-button\"></div>\n            <div className=\"robot-button\"></div>\n          </div>\n          <div className=\"robot-score\">Score: {tourState.score}</div>\n        </div>\n        \n        <div className=\"robot-arm left\">\n          <div className=\"robot-hand\">\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n          </div>\n        </div>\n        \n        <div className=\"robot-arm right\">\n          <div className=\"robot-hand\">\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n          </div>\n        </div>\n        \n        <div className=\"robot-leg left\">\n          <div className=\"robot-wheel\"></div>\n        </div>\n        \n        <div className=\"robot-leg right\">\n          <div className=\"robot-wheel\"></div>\n        </div>\n        \n        <div className=\"robot-jetpack\">\n          <div className=\"jetpack-flame left\"></div>\n          <div className=\"jetpack-flame right\"></div>\n        </div>\n        \n        <div className=\"robot-trail\">\n          <div className=\"trail-particle\"></div>\n          <div className=\"trail-particle\"></div>\n          <div className=\"trail-particle\"></div>\n        </div>\n        \n        {tourState.isGuiding && (\n          <div className={`robot-message-container ${!tourState.isThinking ? 'visible' : ''}`}>\n            <div className=\"message-title\">\n              {tourSteps[tourState.currentStep]?.title || 'Hello!'}\n            </div>\n            <div className=\"message-content\">\n              {tourState.message}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {tourState.showIntroDialog && (\n        <div className=\"robot-dialog\">\n          <div className=\"dialog-options\">\n            <button onClick={startTour}>Let's explore together!</button>\n            <button onClick={() => setTourState(prev => ({ ...prev, showIntroDialog: false }))}>\n              Maybe later\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RobotAssistant;","import React, { useEffect } from 'react';\nimport './CodeEditor.css';\n\nconst CodeEditor = ({ isOpen, onClose }) => {\n  useEffect(() => {\n    // Set NODE_OPTIONS environment variable\n    if (process.env.NODE_ENV === 'development') {\n      process.env.NODE_OPTIONS = '--openssl-legacy-provider';\n    }\n  }, []);\n  return (\n    <div id=\"code-editor\" className={isOpen ? 'open' : ''}>\n      <div className=\"code-header\">\n        <div className=\"code-title\">Robotics Control Terminal</div>\n        <button className=\"code-close\" onClick={onClose}>×</button>\n      </div>\n      <div className=\"code-content\">\n        <div className=\"code-line\">\n          <span className=\"line-number\">1</span>\n          <span className=\"line-content\">\n            <span className=\"keyword\">class</span> <span className=\"function\">RobotController</span> {'{'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">2</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;<span className=\"function\">constructor</span>() {'{'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">3</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"keyword\">this</span>.sensors = [];\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">4</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"keyword\">this</span>.motors = [<span className=\"string\">'left'</span>, <span className=\"string\">'right'</span>];\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">5</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"keyword\">this</span>.battery = 100;\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">6</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;{'}'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">7</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;<span className=\"function\">initializeSensors</span>() {'{'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">8</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"keyword\">this</span>.sensors = [\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">9</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'{'} <span className=\"variable\">type</span>: <span className=\"string\">'ultrasonic'</span>, <span className=\"variable\">position</span>: <span className=\"string\">'front'</span> {'}'},\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">10</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'{'} <span className=\"variable\">type</span>: <span className=\"string\">'infrared'</span>, <span className=\"variable\">position</span>: <span className=\"string\">'left'</span> {'}'},\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">11</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'{'} <span className=\"variable\">type</span>: <span className=\"string\">'infrared'</span>, <span className=\"variable\">position</span>: <span className=\"string\">'right'</span> {'}'},\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">12</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'{'} <span className=\"variable\">type</span>: <span className=\"string\">'camera'</span>, <span className=\"variable\">position</span>: <span className=\"string\">'front'</span> {'}'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">13</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;];\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">14</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"keyword\">return</span> <span className=\"keyword\">this</span>.sensors;\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">15</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;{'}'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">16</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;<span className=\"function\">move</span>(<span className=\"variable\">direction</span>, <span className=\"variable\">speed</span>) {'{'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">17</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"comment\">// Implement robot movement logic</span>\n          \n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">18</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"keyword\">console</span>.<span className=\"function\">log</span>(<span className=\"string\">{\"`Moving ${direction} at ${speed} speed`\"}</span>);\n\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">19</span>\n          <span className=\"line-content\">\n            &nbsp;&nbsp;{'}'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">20</span>\n          <span className=\"line-content\">\n            {'}'}\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">21</span>\n          <span className=\"line-content\">\n            <span className=\"keyword\">const</span> robot = <span className=\"keyword\">new</span> <span className=\"function\">RobotController</span>();\n          </span>\n        </div>\n        <div className=\"code-line\">\n          <span className=\"line-number\">22</span>\n          <span className=\"line-content\">\n            robot.<span className=\"function\">initializeSensors</span>();\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeEditor;","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer>\n      <div className=\"robot-tracks\">\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n      </div>\n      <div className=\"container\">\n        <p>© {currentYear} Amr Eslim | Computer Engineer & Embedded Systems Developer</p>\n        <p>Berlin, Germany</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import React, { useEffect, useRef } from 'react';\nimport './CircuitBackground.css';\n\nconst CircuitBackground = () => {\n  const backgroundRef = useRef(null);\n\n  useEffect(() => {\n    const createCircuitBackground = () => {\n      const background = backgroundRef.current;\n      if (!background) return;\n\n      // Clear any existing elements\n      background.innerHTML = '';\n\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      \n      // Create horizontal lines\n      for (let i = 0; i < 15; i++) {\n        const line = document.createElement('div');\n        line.classList.add('circuit-line');\n        \n        const top = Math.random() * height;\n        const lineWidth = Math.random() * 300 + 100;\n        const left = Math.random() * (width - lineWidth);\n        \n        line.style.top = `${top}px`;\n        line.style.left = `${left}px`;\n        line.style.width = `${lineWidth}px`;\n        line.style.height = '1px';\n        \n        background.appendChild(line);\n        \n        // Add circuit nodes to some lines\n        if (Math.random() > 0.5) {\n          const node = document.createElement('div');\n          node.classList.add('circuit-node');\n          node.style.top = `${top - 3}px`;\n          node.style.left = `${left + lineWidth - 3}px`;\n          background.appendChild(node);\n        }\n      }\n      \n      // Create vertical lines\n      for (let i = 0; i < 15; i++) {\n        const line = document.createElement('div');\n        line.classList.add('circuit-line');\n        \n        const left = Math.random() * width;\n        const lineHeight = Math.random() * 300 + 100;\n        const top = Math.random() * (height - lineHeight);\n        \n        line.style.top = `${top}px`;\n        line.style.left = `${left}px`;\n        line.style.width = '1px';\n        line.style.height = `${lineHeight}px`;\n        \n        background.appendChild(line);\n        \n        // Add circuit nodes to some lines\n        if (Math.random() > 0.5) {\n          const node = document.createElement('div');\n          node.classList.add('circuit-node');\n          node.style.top = `${top + lineHeight - 3}px`;\n          node.style.left = `${left - 3}px`;\n          background.appendChild(node);\n        }\n      }\n    };\n\n    // Initial creation\n    createCircuitBackground();\n\n    // Recreate on window resize\n    const handleResize = () => {\n      createCircuitBackground();\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return <div className=\"circuit-background\" ref={backgroundRef}></div>;\n};\n\nexport default CircuitBackground;","import React, { useEffect, useState } from 'react';\nimport './CustomCursor.css';\n\nconst CustomCursor = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [hidden, setHidden] = useState(true);\n  const [enlarged, setEnlarged] = useState(false);\n\n  useEffect(() => {\n    const updateCursorPosition = (e) => {\n      setPosition({ x: e.clientX, y: e.clientY });\n      setHidden(false);\n    };\n\n    const handleMouseOver = (e) => {\n      if (e.target.tagName === 'A' || \n          e.target.tagName === 'BUTTON' || \n          e.target.classList.contains('robot-part') ||\n          e.target.classList.contains('nav-toggle') ||\n          e.target.classList.contains('language-item') ||\n          e.target.classList.contains('interest-item') ||\n          e.target.classList.contains('timeline-item') ||\n          e.target.classList.contains('robot-project') ||\n          e.target.classList.contains('control-btn')) {\n        setEnlarged(true);\n      } else {\n        setEnlarged(false);\n      }\n    };\n\n    const handleMouseOut = () => {\n      setHidden(true);\n    };\n\n    document.addEventListener('mousemove', updateCursorPosition);\n    document.addEventListener('mouseover', handleMouseOver);\n    document.addEventListener('mouseout', handleMouseOut);\n\n    return () => {\n      document.removeEventListener('mousemove', updateCursorPosition);\n      document.removeEventListener('mouseover', handleMouseOver);\n      document.removeEventListener('mouseout', handleMouseOut);\n    };\n  }, []);\n\n  return (\n    <div \n      className={`custom-cursor ${hidden ? 'hidden' : ''} ${enlarged ? 'enlarged' : ''}`}\n      style={{ \n        left: `${position.x}px`, \n        top: `${position.y}px` \n      }}\n    />\n  );\n};\n\nexport default CustomCursor;","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Hero from './components/Hero/Hero';\nimport About from './components/About/About';\nimport Skills from './components/Skills/Skills';\nimport Experience from './components/Experience/Experience';\nimport Projects from './components/Projects/Projects';\nimport RoboticsDiagram from './components/RoboticsDiagram/RoboticsDiagram';\nimport Languages from './components/Languages/Languages';\nimport Interests from './components/Interests/Interests';\nimport Contact from './components/Contact/Contact';\nimport Navigation from './components/Navigation/Navigation';\nimport RobotAssistant from './components/RobotAssistant/RobotAssistant';\nimport CodeEditor from './components/CodeEditor/CodeEditor';\nimport Footer from './components/Footer/Footer';\nimport CircuitBackground from './components/CircuitBackground/CircuitBackground';\nimport CustomCursor from './components/CustomCursor/CustomCursor';\nimport './App.css';\n\nfunction App() {\n  const [codeEditorOpen, setCodeEditorOpen] = React.useState(false);\n\n  const toggleCodeEditor = () => {\n    setCodeEditorOpen(!codeEditorOpen);\n  };\n\n  useEffect(() => {\n    // Initialize intersection observer for animations\n    const observerOptions = {\n      threshold: 0.1,\n      rootMargin: '0px 0px -50px 0px'\n    };\n    \n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('visible');\n          \n          // For progress bars and skill meters\n          if (entry.target.classList.contains('language-item') || entry.target.classList.contains('chip')) {\n            const progressBars = entry.target.querySelectorAll('.skill-progress');\n            progressBars.forEach(progressBar => {\n              const width = progressBar.getAttribute('data-width') + '%';\n              setTimeout(() => {\n                progressBar.style.width = width;\n              }, 300);\n            });\n          }\n        }\n      });\n    }, observerOptions);\n    \n    // Observe elements\n    document.querySelectorAll('.timeline-item, .robot-project, .language-item, .interest-item').forEach(item => {\n      observer.observe(item);\n    });\n    \n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <CustomCursor />\n        <CircuitBackground />\n        \n        <Navigation />\n        <RobotAssistant onRobotClick={toggleCodeEditor} />\n        <CodeEditor isOpen={codeEditorOpen} onClose={() => setCodeEditorOpen(false)} />\n        \n        <main>\n          <Hero />\n          <About />\n          <Skills />\n          <Experience />\n          <Projects />\n          <RoboticsDiagram />\n          <Languages />\n          <Interests />\n          <Contact />\n        </main>\n        \n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}