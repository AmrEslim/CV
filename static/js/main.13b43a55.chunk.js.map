{"version":3,"sources":["components/ProfilePicture/ProfilePicture.js","context/LanguageContext.js","hooks/useTranslation.js","components/Hero/Hero.js","components/About/About.js","components/Skills/Skills.js","components/Experience/TimelineItem.js","components/Experience/Experience.js","components/Projects/Modal.js","components/Projects/ImageCarousel.js","components/Projects/ProjectCard.js","components/Projects/Projects.js","components/Languages/Languages.js","components/Interests/Interests.js","components/Contact/Contact.js","components/Navigation/Navigation.js","components/RobotAssistant/RobotAssistant.js","components/Footer/Footer.js","components/CircuitBackground/CircuitBackground.js","components/CustomCursor/CustomCursor.js","components/LanguageSwitcher/LanguageSwitcher.js","App.js","index.js"],"names":["ProfilePicture","frameRef","useRef","useEffect","handleMouseMove","e","current","rect","getBoundingClientRect","x","clientX","left","width","rotateX","clientY","top","height","rotateY","style","transform","handleMouseLeave","frame","addEventListener","removeEventListener","React","createElement","className","ref","src","alt","LanguageContext","createContext","LanguageProvider","_ref","children","language","setLanguage","useState","Provider","value","toggleLanguage","prevLang","useLanguage","useContext","translations","en","de","useTranslation","t","key","keys","split","k","_value","Hero","robotModelRef","currentRef","y","id","HashLink","smooth","to","toUpperCase","About","map","paragraph","index","SkillMeter","name","percentage","progressRef","observer","IntersectionObserver","entries","isIntersecting","setTimeout","threshold","observe","unobserve","data-width","Array","_","Skills","TimelineItem","forwardRef","date","title","description","details","side","Experience","timelineItemsRef","forEach","entry","target","classList","add","rootMargin","elements","item","el","Modal","isOpen","onClose","project","modalRef","contentRef","handleEsc","event","document","body","overflow","createPortal","onClick","stopPropagation","aria-label","subtitle","ProjectVisual","type","visualType","images","features","feature","technologies","tech","references","length","href","url","rel","ImageCarousel","currentIndex","setCurrentIndex","Fragment","prevSlide","prevIndex","nextSlide","ProjectCard","_ref2","isModalOpen","setIsModalOpen","preventDefault","demoLink","closeModal","Projects","projectsRef","projectsData","LanguageItem","proficiency","itemRef","currentItemRef","Languages","Interests","interest","Contact","position","background","border","borderRadius","animation","animationDelay","right","Navigation","onMenuOpenChange","menuOpen","setMenuOpen","activeSection","setActiveSection","handleScroll","sections","scrollPosition","window","scrollY","innerHeight","section","element","getElementById","offsetTop","offsetHeight","closeMenu","NavLinks","toggleMenu","newMenuState","RobotAssistant","_tourSteps$tourState$","hideOnMenuOpen","robotRef","eyesRef","containerRef","isDraggingRef","dragOffsetRef","robotVisible","setRobotVisible","setPosition","savedPosition","localStorage","getItem","JSON","parse","innerWidth","tourState","setTourState","isGuiding","currentStep","message","isThinking","score","isMoving","showIntroDialog","viewport","setViewport","tourSteps","step","delay","newX","newY","maxX","offsetWidth","maxY","Math","min","max","robotRect","robotCenterX","robotCenterY","angleX","angleY","eye","handleMouseUp","cursor","setItem","stringify","handleResize","prev","moveToPosition","duration","arguments","undefined","constrainedX","constrainedY","constrainPosition","pixelX","pixelY","startX","startY","startTime","Date","now","animate","elapsed","progress","easeProgress","pow","requestAnimationFrame","navigateToStep","stepIndex","querySelector","offset","elementPosition","pageYOffset","scrollTo","behavior","highlightElement","highlight","appendChild","remove","updateMessagePosition","messageContainer","containerRect","leftPos","onMouseDown","handleClick","querySelectorAll","button","random","zIndex","userSelect","color","fontSize","padding","display","alignItems","justifyContent","backgroundColor","getMessage","substring","startTour","Footer","currentYear","getFullYear","CircuitBackground","backgroundRef","createCircuitBackground","innerHTML","i","line","lineWidth","node","lineHeight","CustomCursor","hidden","setHidden","enlarged","setEnlarged","isDragging","setIsDragging","rafId","updateCursorPosition","cancelAnimationFrame","handleMouseOver","isDraggableElement","closest","tagName","contains","handleMouseDown","handleMouseOut","LanguageSwitcher","App","progressBar","getAttribute","disconnect","Router","basename","process","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.13b43a55.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './ProfilePicture.css';\r\n\r\nconst ProfilePicture = () => {\r\n  const frameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!frameRef.current) return;\r\n      \r\n      const rect = frameRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - rect.width / 2;\r\n      const y = e.clientY - rect.top - rect.height / 2;\r\n      \r\n      // Calculate rotation based on mouse position\r\n      const rotateX = (y / rect.height) * 20;\r\n      const rotateY = (x / rect.width) * 20;\r\n      \r\n      frameRef.current.style.transform = `perspective(1000px) rotateX(${-rotateX}deg) rotateY(${rotateY}deg)`;\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      if (frameRef.current) {\r\n        frameRef.current.style.transform = 'perspective(1000px) rotateX(0) rotateY(0)';\r\n      }\r\n    };\r\n\r\n    const frame = frameRef.current;\r\n    if (frame) {\r\n      frame.addEventListener('mousemove', handleMouseMove);\r\n      frame.addEventListener('mouseleave', handleMouseLeave);\r\n    }\r\n\r\n    return () => {\r\n      if (frame) {\r\n        frame.removeEventListener('mousemove', handleMouseMove);\r\n        frame.removeEventListener('mouseleave', handleMouseLeave);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-picture-container\" ref={frameRef}>\r\n      <div className=\"profile-frame\">\r\n        <div className=\"frame-corner top-left\"></div>\r\n        <div className=\"frame-corner top-right\"></div>\r\n        <div className=\"frame-corner bottom-left\"></div>\r\n        <div className=\"frame-corner bottom-right\"></div>\r\n        <div className=\"frame-edge top\"></div>\r\n        <div className=\"frame-edge right\"></div>\r\n        <div className=\"frame-edge bottom\"></div>\r\n        <div className=\"frame-edge left\"></div>\r\n        <div className=\"scanning-line\"></div>\r\n        <div className=\"profile-image\">\r\n          <img src={process.env.PUBLIC_URL + '/images/profile.jpg'} alt=\"Amr Eslim\" />\r\n        </div>\r\n        <div className=\"frame-overlay\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePicture;","import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  const toggleLanguage = () => {\r\n    setLanguage(prevLang => prevLang === 'en' ? 'de' : 'en');\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, toggleLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => useContext(LanguageContext);\r\n","import { useLanguage } from '../context/LanguageContext';\r\nimport en from '../translations/en.json';\r\nimport de from '../translations/de.json';\r\n\r\nconst translations = { en, de };\r\n\r\nexport const useTranslation = () => {\r\n  const { language } = useLanguage();\r\n\r\n  const t = (key) => {\r\n    const keys = key.split('.');\r\n    let value = translations[language];\r\n    \r\n    for (const k of keys) {\r\n      value = value?.[k];\r\n    }\r\n    \r\n    return value || key;\r\n  };\r\n\r\n  return { t };\r\n};\r\n","import React, { useRef, useEffect } from 'react';\nimport { HashLink } from 'react-router-hash-link';\nimport ProfilePicture from '../ProfilePicture/ProfilePicture';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './Hero.css';\n\nconst Hero = () => {\n  const robotModelRef = useRef(null);\n\n  useEffect(() => {\n    const currentRef = robotModelRef.current;\n    if (currentRef) {\n      const handleMouseMove = (e) => {\n        const rect = currentRef.getBoundingClientRect();\n        const x = e.clientX - rect.left - rect.width / 2;\n        const y = e.clientY - rect.top - rect.height / 2;\n        \n        currentRef.style.transform = `rotateY(${x * 0.05}deg) rotateX(${-y * 0.05}deg)`;\n      };\n      \n      const handleMouseLeave = () => {\n        currentRef.style.transform = '';\n      };\n      \n      currentRef.addEventListener('mousemove', handleMouseMove);\n      currentRef.addEventListener('mouseleave', handleMouseLeave);\n      \n      return () => {\n        currentRef.removeEventListener('mousemove', handleMouseMove);\n        currentRef.removeEventListener('mouseleave', handleMouseLeave);\n      };\n    }\n  }, []);\n\n  const { t } = useTranslation();\n\n  return (\n    <section id=\"hero\" className=\"scene\">\n      <div className=\"content-container\">\n        <div className=\"hero-flex\">\n          <div className=\"hero-text\">\n            <h1>Amr Eslim</h1>\n            <p className=\"hero-subtitle\">{t('hero.subtitle')}</p>\n            \n            <div className=\"hero-info\">\n              <p>{t('hero.info.greeting')}</p>\n              <p>{t('hero.info.location')}</p>\n              <p>{t('hero.info.education')}</p>\n              <p>{t('hero.info.specialization')}</p>\n              <p>{t('hero.info.scroll')}</p>\n            </div>\n            \n            <div className=\"cta-buttons\">\n              <HashLink smooth to=\"#about\" className=\"cta-button\">{t('ui.buttons.explore').toUpperCase()}</HashLink>\n              <HashLink smooth to=\"#contact\" className=\"cta-button\">{t('ui.buttons.connect').toUpperCase()}</HashLink>\n            </div>\n          </div>\n          \n          <div className=\"hero-profile\">\n            <ProfilePicture />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;","import React from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './About.css';\n\nconst About = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section id=\"about\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">{t('about.title')}</h2>\n        <div className=\"about-content\">\n          {t('about.content').map((paragraph, index) => (\n            <p key={index}>{paragraph}</p>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;","import React, { useEffect, useRef } from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './Skills.css';\n\nconst SkillMeter = ({ name, percentage }) => {\n  const progressRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && progressRef.current) {\n          setTimeout(() => {\n            progressRef.current.style.width = `${percentage}%`;\n          }, 300);\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    const currentRef = progressRef.current;\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [percentage]);\n\n  return (\n    <div>\n      <p>{name}</p>\n      <div className=\"skill-meter\">\n        <div \n          className=\"skill-progress\" \n          ref={progressRef}\n          data-width={percentage}\n          style={{ width: '0%' }} // Start at 0, will be animated to the target width\n        >\n          <div className=\"skill-dots\">\n            {[...Array(10)].map((_, index) => (\n              <div className=\"skill-dot\" key={index}></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Skills = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section id=\"skills\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">{t('skills.title')}</h2>\n        <div className=\"circuit-board\">\n          <div className=\"chip\">\n            <h3 className=\"chip-title\">{t('skills.categories.programming.title')}</h3>\n            <SkillMeter name={t('skills.categories.programming.skills.cpp')} percentage={90} />\n            <SkillMeter name={t('skills.categories.programming.skills.python')} percentage={85} />\n            <SkillMeter name={t('skills.categories.programming.skills.sql')} percentage={75} />\n          </div>\n          \n          <div className=\"chip\">\n            <h3 className=\"chip-title\">{t('skills.categories.web.title')}</h3>\n            <SkillMeter name={t('skills.categories.web.skills.frontend')} percentage={80} />\n            <SkillMeter name={t('skills.categories.web.skills.flask')} percentage={75} />\n            <SkillMeter name={t('skills.categories.web.skills.react')} percentage={70} />\n          </div>\n          \n          <div className=\"chip\">\n            <h3 className=\"chip-title\">{t('skills.categories.tools.title')}</h3>\n            <SkillMeter name={t('skills.categories.tools.skills.git')} percentage={85} />\n            <SkillMeter name={t('skills.categories.tools.skills.linux')} percentage={90} />\n            <SkillMeter name={t('skills.categories.tools.skills.docker')} percentage={75} />\n          </div>\n          \n          <div className=\"chip\">\n            <h3 className=\"chip-title\">{t('skills.categories.embedded.title')}</h3>\n            <SkillMeter name={t('skills.categories.embedded.skills.embedded_linux')} percentage={85} />\n\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;","import React, { forwardRef } from 'react';\n\nconst TimelineItem = forwardRef(({ date, title, description, details, side }, ref) => {\n  return (\n    <div \n      className={`timeline-item ${side}`} \n      ref={ref}\n    >\n      <div className=\"timeline-content\">\n        <div className=\"timeline-date\">{date}</div>\n        <h3 className=\"timeline-title\">{title}</h3>\n        <p>{description}</p>\n        <p>{details}</p>\n      </div>\n    </div>\n  );\n});\n\nexport default TimelineItem;","import React, { useEffect, useRef } from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport TimelineItem from './TimelineItem';\nimport './Experience.css';\n\nconst Experience = () => {\n  const { t } = useTranslation();\n  const timelineItemsRef = useRef([]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('visible');\n          }\n        });\n      },\n      { \n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    const elements = timelineItemsRef.current;\n    if (elements) {\n      elements.forEach(ref => {\n        if (ref) observer.observe(ref);\n      });\n    }\n\n    return () => {\n      if (elements) {\n        elements.forEach(ref => {\n          if (ref) observer.unobserve(ref);\n        });\n      }\n    };\n  }, []);\n\n  return (\n    <section id=\"experience\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">{t('experience.title')}</h2>\n        <div className=\"timeline\">\n          {t('experience.items').map((item, index) => (\n            <TimelineItem\n              key={item.id}\n              date={item.date}\n              title={item.title}\n              description={item.description}\n              details={item.details}\n              side={item.side}\n              ref={el => timelineItemsRef.current[index] = el}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Experience;","import React, { useEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport { ProjectVisual } from './ProjectCard';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, project }) => {\r\n  const { t } = useTranslation();\r\n  const modalRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEsc);\r\n      document.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEsc);\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [isOpen, onClose]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return createPortal(\r\n    <div className={`modal-backdrop ${isOpen ? 'visible' : ''}`} ref={modalRef} onClick={onClose}>\r\n      <div className=\"modal-content\" ref={contentRef} onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"modal-close\" onClick={onClose} aria-label=\"Close modal\">×</button>\r\n        \r\n        <div className=\"modal-header\">\r\n          <h2 className=\"modal-title\">{project.title}</h2>\r\n          {project.subtitle && <h4 className=\"modal-subtitle\">{project.subtitle}</h4>}\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"project-visual\">\r\n            <ProjectVisual type={project.visualType} images={project.images} />\r\n          </div>\r\n\r\n          <p className=\"modal-description\">{project.description}</p>\r\n\r\n          {project.features && (\r\n            <ul className=\"modal-feature-list\">\r\n              {project.features.map((feature, index) => (\r\n                <li key={index}>{feature}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n\r\n          {project.technologies && (\r\n            <div className=\"modal-tech\">\r\n              {project.technologies.map((tech, index) => (\r\n                <span key={index} className=\"modal-tech-tag\">{tech}</span>\r\n              ))}\r\n            </div>\r\n          )}          {project.references && project.references.length > 0 && (\r\n            <div className=\"modal-references\">\r\n              <h5>{t('ui.sections.references')}:</h5>\r\n              <ul>\r\n                {project.references.map((ref, index) => (\r\n                  <li key={index}>\r\n                    <a href={ref.url} target=\"_blank\" rel=\"noopener noreferrer\">{ref.title}</a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './ImageCarousel.css';\r\n\r\nconst ImageCarousel = ({ images }) => {\r\n  const { t } = useTranslation();\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  if (!images || images.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) => \r\n      prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) => \r\n      prevIndex === 0 ? images.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <img \r\n        src={images[currentIndex]} \r\n        alt={`Slide ${currentIndex + 1}`}\r\n        className=\"carousel-image\"\r\n      />\r\n      {images.length > 1 && (\r\n        <>\r\n          <button \r\n            className=\"carousel-button prev\" \r\n            onClick={prevSlide}\r\n            aria-label=\"Previous slide\"\r\n          >\r\n            ‹\r\n          </button>\r\n          <button \r\n            className=\"carousel-button next\" \r\n            onClick={nextSlide}\r\n            aria-label=\"Next slide\"\r\n          >\r\n            ›\r\n          </button>\r\n          <div className=\"carousel-dots\">\r\n            {images.map((_, index) => (\r\n              <button\r\n                key={index}\r\n                className={`carousel-dot ${index === currentIndex ? 'active' : ''}`}\r\n                onClick={() => setCurrentIndex(index)}\r\n                aria-label={`Go to slide ${index + 1}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import React, { forwardRef, useState } from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './ProjectCard.css';\nimport Modal from './Modal';\nimport ImageCarousel from './ImageCarousel';\n\n// Visual fallback for various project types\nexport const ProjectVisual = ({ type, images }) => {\n  if (images && images.length > 0) {\n    return <ImageCarousel images={images} />;\n  }\n\n  switch (type) {\n    case 'embedded-system':\n      return (\n        <div className=\"project-robot\">\n          {/* ... same robot visualization ... */}\n        </div>\n      );\n    case 'web-dashboard':\n      return (\n        <div className=\"project-robot\">\n          {/* ... same dashboard visualization ... */}\n        </div>\n      );\n    case 'mentoring-app':\n      return (\n        <div className=\"project-robot\">\n          {/* ... same app visualization ... */}\n        </div>\n      );\n    case 'backend-system':\n      return (\n        <div className=\"project-robot\">\n          {/* ... same backend visualization ... */}\n        </div>\n      );\n    default:\n      return <div className=\"project-robot\"></div>;\n  }\n};\n\n// Main card component\nconst ProjectCard = forwardRef(({ project }, ref) => {\n  const { t } = useTranslation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = (e) => {\n    e.preventDefault();\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"robot-project\" ref={ref}>\n      <div className=\"project-image\">\n        <ProjectVisual type={project.visualType} images={project.images} />\n      </div>\n      <div className=\"project-details\">\n        <h3 className=\"project-title\">{project.title}</h3>\n        {project.subtitle && <p className=\"project-subtitle\">{project.subtitle}</p>}\n        <div className=\"project-links\">\n          <button onClick={openModal} className=\"project-link\">{t('ui.buttons.details')}</button>\n          {project.demoLink && (\n            <a href={project.demoLink} target=\"_blank\" rel=\"noopener noreferrer\" className=\"project-link\">\n              {t('ui.buttons.demo')}\n            </a>\n          )}\n        </div>\n      </div>\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        project={project}\n      />\n    </div>\n  );\n});\n\nexport default ProjectCard;\n","import React, { useEffect, useRef } from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport ProjectCard from './ProjectCard';\nimport './Projects.css';\n\nconst Projects = () => {\n  const { t } = useTranslation();\n  const projectsRef = useRef([]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('visible');\n          }\n        });\n      },\n      {\n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n      }\n    );\n\n    const elements = projectsRef.current;\n    if (elements) {\n      elements.forEach(ref => {\n        if (ref) observer.observe(ref);\n      });\n    }\n\n    return () => {\n      if (elements) {\n        elements.forEach(ref => {\n          if (ref) observer.unobserve(ref);\n        });\n      }\n    };\n  }, []);\n\n  const projectsData = [\n    {\n      id: 1,\n      ...t('projects.snake_robot'),\n      technologies: [\n        \"ESP32\", \"C++\", \"CPG Control Algorithms\", \"3D Printing (TPU, PLA+)\",\n        \"Arduino Framework\", \"React\", \"WebSockets\", \"Motion Tracking (Kinovea)\",\n        \"ACS712 Current Sensor\", \"Onshape CAD\", \"CSV Data Logging\"\n      ],\n      visualType: \"embedded-system\",\n      images: [\n        process.env.PUBLIC_URL + '/images/snake-robot1.jpg',\n        process.env.PUBLIC_URL + '/images/snake-robot2.jpg'\n      ],\n      demoLink: \"https://github.com/AmrEslim/snake_robot\"\n    },\n    {\n      id: 2,\n      ...t('projects.dashboard'),\n      technologies: [\"React\", \"Flask\", \"Bootstrap\", \"HTML/CSS\", \"JavaScript\"],\n      visualType: \"web-dashboard\",\n      images: [process.env.PUBLIC_URL + '/images/dashboard.jpg'],\n      demoLink: \"https://github.com/AmrEslim/\"\n    },\n    {\n      id: 3,\n      ...t('projects.mentoring'),\n      technologies: [\"Figma\", \"UX Design\", \"React\", \"Prototyping\", \"Accessibility\"],\n      visualType: \"mentoring-app\",\n      images: [process.env.PUBLIC_URL + '/images/mentoring-app.jpg'],\n      demoLink: \"https://github.com/AmrEslim/\"\n    }\n  ];\n\n  return (\n    <section id=\"projects\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">{t('projects.title')}</h2>\n        <div className=\"robotics-projects\">\n          {projectsData.map((project, index) => (\n            <ProjectCard\n              key={project.id}\n              project={project}\n              ref={el => projectsRef.current[index] = el}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Projects;","import React, { useEffect, useRef } from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './Languages.css';\n\nconst LanguageItem = ({ language, proficiency, percentage }) => {\n  const itemRef = useRef(null);\n  const progressRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          itemRef.current.classList.add('visible');\n          \n          if (progressRef.current) {\n            setTimeout(() => {\n              progressRef.current.style.width = `${percentage}%`;\n            }, 300);\n          }\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    const currentItemRef = itemRef.current;\n    if (currentItemRef) {\n      observer.observe(currentItemRef);\n    }\n\n    return () => {\n      if (currentItemRef) {\n        observer.unobserve(currentItemRef);\n      }\n    };\n  }, [percentage]);\n\n  return (\n    <div className=\"language-item\" ref={itemRef}>\n      <h3 className=\"language-name\">{language}</h3>\n      <p>{proficiency}</p>\n      <div className=\"skill-meter\">\n        <div \n          className=\"skill-progress\" \n          ref={progressRef} \n          data-width={percentage}\n          style={{ width: '0%' }}\n        >\n          <div className=\"skill-dots\">\n            {[...Array(10)].map((_, index) => (\n              <div className=\"skill-dot\" key={index}></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Languages = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section id=\"languages\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">{t('languages.title')}</h2>\n        <div className=\"languages-container\">\n          {t('languages.items').map(item => (\n            <LanguageItem\n              key={item.id}\n              language={item.language}\n              proficiency={item.proficiency}\n              percentage={item.percentage}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Languages;","import React from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './Interests.css';\n\nconst Interests = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section id=\"interests\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">{t('interests.title')}</h2>\n        <div className=\"interests-container\">\n          {t('interests.items').map((interest, index) => (\n            <div className=\"interest-item\" key={index}>\n              {interest}\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Interests;","import React from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './Contact.css';\n\nconst Contact = () => {\n  const { t } = useTranslation();\n\n  return (\n    <section id=\"contact\" className=\"scene\">\n      <div className=\"content-container\">\n        <h2 className=\"section-title\">{t('contact.title')}</h2>\n        \n        <div className=\"contact-info\">\n          <div className=\"contact-item\">\n            <span className=\"contact-label\">{t('contact.info.email')}</span>\n            <a href=\"mailto:Eslim.amr@gmail.com\">Eslim.amr@gmail.com</a>\n          </div>\n          <div className=\"contact-item\">\n            <span className=\"contact-label\">{t('contact.info.linkedin')}</span>\n            <a href=\"https://www.linkedin.com/in/amr-eslim\" target=\"_blank\" rel=\"noopener noreferrer\">\n              www.linkedin.com/in/amr-eslim\n            </a>\n          </div>\n          <div className=\"contact-item\">\n            <span className=\"contact-label\">{t('contact.info.location')}</span>\n            <span>{t('contact.info.locationValue')}</span>\n          </div>\n        </div>\n        \n        <div className=\"contact-container\">\n          <div className=\"contact-robot\">\n            <div style={{ width: '80px', height: '120px', position: 'relative' }}>\n              <div style={{ width: '40px', height: '40px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '10px', position: 'absolute', top: '0', left: '20px', animation: 'float 3s infinite alternate' }}></div>\n              <div style={{ width: '60px', height: '40px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', borderRadius: '5px', position: 'absolute', top: '40px', left: '10px', animation: 'float 3s infinite alternate', animationDelay: '0.5s' }}></div>\n              <div style={{ width: '15px', height: '30px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', position: 'absolute', top: '50px', left: '0', animation: 'wave 2s infinite' }}></div>\n              <div style={{ width: '15px', height: '30px', background: 'var(--chip-color)', border: '2px solid var(--robot-primary)', position: 'absolute', top: '50px', right: '0', animation: 'wave 2s infinite', animationDelay: '1s' }}></div>\n            </div>\n          </div>\n          <div className=\"contact-text\">\n            <p>{t('contact.text')}</p>\n          </div>\n          <div className=\"contact-buttons\">\n            <a href=\"mailto:Eslim.amr@gmail.com\" className=\"cta-button\">{t('contact.buttons.email')}</a>\n            <a href=\"https://www.linkedin.com/in/amr-eslim\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"cta-button\">{t('contact.buttons.linkedin')}</a>\n          </div>\n          \n          {/* <div className=\"contact-form\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" required />\n              </div>\n              <div className=\"form-group\">\n                <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" required />\n              </div>\n              <div className=\"form-group\">\n                <textarea className=\"form-control\" rows=\"5\" placeholder=\"Your Message\" required></textarea>\n              </div>\n              <button type=\"submit\" className=\"cta-button\">Send Message</button>\n            </form>\n          </div> */}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;","import React, { useState, useEffect } from 'react';\nimport { HashLink } from 'react-router-hash-link';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './Navigation.css';\n\nconst Navigation = ({ onMenuOpenChange }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [activeSection, setActiveSection] = useState('hero');\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const sections = [\n        'hero', 'about', 'skills', 'experience', \n        'projects', 'robotics-diagram', 'languages', \n        'interests', 'contact'\n      ];\n      \n      const scrollPosition = window.scrollY + window.innerHeight / 3;\n      \n      for (const section of sections) {\n        const element = document.getElementById(section);\n        if (element) {\n          const { offsetTop, offsetHeight } = element;\n          if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {\n            setActiveSection(section);\n            break;\n          }\n        }\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    handleScroll(); // Initial check\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const toggleMenu = () => {\n    const newMenuState = !menuOpen;\n    setMenuOpen(newMenuState);\n    if (onMenuOpenChange) {\n      onMenuOpenChange(newMenuState);\n    }\n  };\n\n  const closeMenu = () => {\n    setMenuOpen(false);\n    if (onMenuOpenChange) {\n      onMenuOpenChange(false);\n    }\n  };\n\n  const NavLinks = ({ onClick }) => (\n    <ul className=\"nav-links\">\n      <li>\n        <HashLink \n          smooth \n          to=\"#hero\" \n          onClick={onClick}\n          className={activeSection === 'hero' ? 'active' : ''}\n        >\n          {t('nav.home')}\n        </HashLink>\n      </li>\n      <li>\n        <HashLink \n          smooth \n          to=\"#about\" \n          onClick={onClick}\n          className={activeSection === 'about' ? 'active' : ''}\n        >\n          {t('nav.about')}\n        </HashLink>\n      </li>\n      <li>\n        <HashLink \n          smooth \n          to=\"#skills\" \n          onClick={onClick}\n          className={activeSection === 'skills' ? 'active' : ''}\n        >\n          {t('nav.skills')}\n        </HashLink>\n      </li>\n      <li>\n        <HashLink \n          smooth \n          to=\"#experience\" \n          onClick={onClick}\n          className={activeSection === 'experience' ? 'active' : ''}\n        >\n          {t('nav.experience')}\n        </HashLink>\n      </li>\n      <li>\n        <HashLink \n          smooth \n          to=\"#projects\" \n          onClick={onClick}\n          className={activeSection === 'projects' ? 'active' : ''}\n        >\n          {t('nav.projects')}\n        </HashLink>\n      </li>\n      <li>\n        <HashLink \n          smooth \n          to=\"#languages\" \n          onClick={onClick}\n          className={activeSection === 'languages' ? 'active' : ''}\n        >\n          {t('nav.languages')}\n        </HashLink>\n      </li>\n      <li>\n        <HashLink \n          smooth \n          to=\"#interests\" \n          onClick={onClick}\n          className={activeSection === 'interests' ? 'active' : ''}\n        >\n          {t('nav.interests')}\n        </HashLink>\n      </li>\n      <li>\n        <HashLink \n          smooth \n          to=\"#contact\" \n          onClick={onClick}\n          className={activeSection === 'contact' ? 'active' : ''}\n        >\n          {t('nav.contact')}\n        </HashLink>\n      </li>\n    </ul>\n  );\n\n  return (\n    <>\n      {/* Horizontal Navigation for Desktop */}\n      <nav className=\"nav-horizontal\">\n        <NavLinks onClick={() => {}} />\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"nav-container\">\n        <button className=\"nav-toggle\" onClick={toggleMenu}>☰</button>\n      </div>\n      \n      <nav className={`nav-menu ${menuOpen ? 'active' : ''}`}>\n        <button className=\"nav-close\" onClick={closeMenu}>✕</button>\n        <NavLinks onClick={closeMenu} />\n      </nav>\n    </>\n  );\n};\n\nexport default Navigation;","import React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './RobotAssistant.css';\n\nconst RobotAssistant = ({ hideOnMenuOpen = false, menuOpen = false }) => {\n  const { t } = useTranslation();\n  const robotRef = useRef(null);\n  const eyesRef = useRef([]);\n  const containerRef = useRef(null);\n  const isDraggingRef = useRef(false);\n  const dragOffsetRef = useRef({ x: 0, y: 0 });\n  const [robotVisible, setRobotVisible] = useState(true);\n  \n  // Initialize position from localStorage or default values\n  const [position, setPosition] = useState(() => {\n    const savedPosition = localStorage.getItem('robotPosition');\n    return savedPosition ? JSON.parse(savedPosition) : {\n      x: window.innerWidth - 200,\n      y: window.innerHeight - 200  // Adjusted to be further down from the top\n    };\n  });\n  \n  const [tourState, setTourState] = useState({\n    isGuiding: false,\n    currentStep: -1, // -1 means not started\n    message: '',\n    isThinking: false,\n    score: 0,\n    isMoving: false,\n    showIntroDialog: false\n  });\n  const [viewport, setViewport] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  const tourSteps = t('robotAssistant.tourSteps').map((step, index) => ({\n    title: step.title,\n    message: step.message,\n    target: [null, \"#hero\", \"#skills\", \"#projects\", \"#experience\", \"#robotics-diagram\", \"#languages\", \"#interests\", \"#contact\"][index],\n    position: [\n      { x: 70, y: 50 },\n      { x: 20, y: 30 },\n      { x: 80, y: 40 },\n      { x: 20, y: 50 },\n      { x: 75, y: 40 },\n      { x: 25, y: 60 },\n      { x: 80, y: 50 },\n      { x: 20, y: 70 },\n      { x: 70, y: 60 }\n    ][index],\n    delay: [3000, 4000, 5000, 5000, 4000, 5000, 4000, 4000, 4000][index]\n  }));\n\n  useEffect(() => {\n    const handleMouseMove = (e) => {\n      if (isDraggingRef.current && robotRef.current) {\n        // Update position based on mouse movement\n        const newX = e.clientX - dragOffsetRef.current.x;\n        const newY = e.clientY - dragOffsetRef.current.y;\n        \n        // Constrain to viewport\n        const maxX = window.innerWidth - robotRef.current.offsetWidth;\n        const maxY = window.innerHeight - robotRef.current.offsetHeight;\n        \n        setPosition({\n          x: Math.min(Math.max(0, newX), maxX),\n          y: Math.min(Math.max(0, newY), maxY)\n        });\n      } else if (robotRef.current && containerRef.current) {\n        const robotRect = robotRef.current.getBoundingClientRect();\n        const robotCenterX = robotRect.left + robotRect.width / 2;\n        const robotCenterY = robotRect.top + robotRect.height / 2;\n        \n        const angleX = (e.clientX - robotCenterX) / window.innerWidth * 5;\n        const angleY = (e.clientY - robotCenterY) / window.innerHeight * 5;\n        \n        eyesRef.current.forEach(eye => {\n          if (eye) {\n            eye.style.transform = `translate(${angleX}px, ${angleY}px)`;\n          }\n        });\n        \n        if (containerRef.current) {\n          containerRef.current.style.transform = `rotateY(${angleX * 5}deg) rotateX(${-angleY * 2}deg)`;\n        }\n      }\n    };\n\n    const handleMouseUp = () => {\n      if (isDraggingRef.current && robotRef.current) {\n        isDraggingRef.current = false;\n        document.body.style.cursor = 'auto';\n      }\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = 'auto';\n    };\n  }, []);\n\n  // Save position to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('robotPosition', JSON.stringify(position));\n  }, [position]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setViewport({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      \n      // Adjust position if robot is outside viewport after resize\n      setPosition(prev => ({\n        x: Math.min(Math.max(0, prev.x), window.innerWidth - 200),\n        y: Math.min(Math.max(0, prev.y), window.innerHeight - 270)\n      }));\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const constrainPosition = (x, y) => {\n    // Convert percentage to pixels for precise boundary checking\n    const pixelX = (x / 100) * viewport.width;\n    const pixelY = (y / 100) * viewport.height;\n    \n    // Constrain to viewport boundaries considering robot dimensions\n    const constrainedX = Math.min(Math.max(0, pixelX), viewport.width - 200);\n    const constrainedY = Math.min(Math.max(0, pixelY), viewport.height - 270);\n    \n    // Convert back to percentages\n    return {\n      x: (constrainedX / viewport.width) * 100,\n      y: (constrainedY / viewport.height) * 100\n    };\n  };\n\n  const moveToPosition = (x, y, duration = 1000) => {\n    setTourState(prev => ({ ...prev, isMoving: true }));\n    \n    const { x: constrainedX, y: constrainedY } = constrainPosition(x, y);\n    const startX = position.x;\n    const startY = position.y;\n    const startTime = Date.now();\n    \n    const animate = () => {\n      const currentTime = Date.now();\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      // Easing function for smooth movement\n      const easeProgress = 1 - Math.pow(1 - progress, 3);\n      \n      const newX = startX + (constrainedX - startX) * easeProgress;\n      const newY = startY + (constrainedY - startY) * easeProgress;\n      \n      setPosition({ x: newX, y: newY });\n      \n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        setTourState(prev => ({ ...prev, isMoving: false }));\n      }\n    };\n    \n    requestAnimationFrame(animate);\n  };\n\n  const showIntroDialog = () => {\n    setTourState(prev => ({\n      ...prev,\n      showIntroDialog: true,\n      message: t('robotAssistant.intro.dialog')\n    }));\n  };\n\n  const startTour = () => {\n    setTourState(prev => ({\n      ...prev,\n      isGuiding: true,\n      currentStep: 0,\n      showIntroDialog: false\n    }));\n    \n    navigateToStep(0);\n  };\n\n  const navigateToStep = (stepIndex) => {\n    const step = tourSteps[stepIndex];\n    \n    setTourState(prev => ({\n      ...prev,\n      currentStep: stepIndex,\n      message: step.message,\n      isThinking: true\n    }));\n\n    // Move robot to position\n    moveToPosition(step.position.x, step.position.y);\n\n    // Scroll to target if exists\n    if (step.target) {\n      const element = document.querySelector(step.target);\n      if (element) {\n        // Smooth scroll with offset\n        const offset = window.innerHeight * 0.2;\n        const elementPosition = element.getBoundingClientRect().top + window.pageYOffset;\n        window.scrollTo({\n          top: elementPosition - offset,\n          behavior: 'smooth'\n        });\n        \n        highlightElement(element);\n      }\n    }\n\n    setTimeout(() => {\n      setTourState(prev => ({ ...prev, isThinking: false }));\n\n      // Move to next step after delay if not last step\n      if (stepIndex < tourSteps.length - 1) {\n        setTimeout(() => {\n          navigateToStep(stepIndex + 1);\n        }, step.delay);\n      }\n    }, 1000);\n  };\n\n  const highlightElement = (element) => {\n    const highlight = document.createElement('div');\n    highlight.className = 'section-highlight';\n    const rect = element.getBoundingClientRect();\n    \n    highlight.style.position = 'fixed';\n    highlight.style.top = `${rect.top - 10}px`;\n    highlight.style.left = `${rect.left - 10}px`;\n    highlight.style.width = `${rect.width + 20}px`;\n    highlight.style.height = `${rect.height + 20}px`;\n    \n    document.body.appendChild(highlight);\n    setTimeout(() => highlight.remove(), 3000);\n  };\n\n  const handleClick = () => {\n    if (!tourState.isGuiding) {\n      if (!tourState.showIntroDialog) {\n        showIntroDialog();\n      }\n    }\n    \n    // Activate random buttons for visual effect\n    const buttons = document.querySelectorAll('.robot-button');\n    buttons.forEach(button => {\n      if (Math.random() > 0.5) {\n        button.classList.add('active');\n        setTimeout(() => button.classList.remove('active'), 500);\n      }\n    });\n  };\n\n  const toggleVisibility = (e) => {\n    e.stopPropagation();  // Prevent the robot click handler from firing\n    setRobotVisible(!robotVisible);\n  };\n\n  const handleMouseDown = (e) => {\n    if (robotRef.current) {\n      isDraggingRef.current = true;\n      document.body.style.cursor = 'grabbing';\n      const robotRect = robotRef.current.getBoundingClientRect();\n      dragOffsetRef.current = {\n        x: e.clientX - robotRect.left,\n        y: e.clientY - robotRect.top\n      };\n      e.preventDefault(); // Prevent text selection while dragging\n      e.stopPropagation(); // Prevent other click handlers from firing\n    }\n  };\n\n  const getMessage = () => {\n    if (tourState.showIntroDialog) {\n      return t('robotAssistant.intro.greeting');\n    }\n    const message = tourState.message || t('robotAssistant.intro.default');\n    // Ensure message isn't too long\n    return message.length > 150 ? message.substring(0, 147) + '...' : message;\n  };\n\n  useEffect(() => {\n    const updateMessagePosition = () => {\n      const messageContainer = document.querySelector('.robot-message-container');\n      if (messageContainer) {\n        const robotRect = robotRef.current.getBoundingClientRect();\n        const containerRect = messageContainer.getBoundingClientRect();\n        \n        let leftPos = robotRect.left + (robotRect.width / 2);\n        leftPos = Math.min(Math.max(containerRect.width / 2 + 20, leftPos), \n                          window.innerWidth - (containerRect.width / 2 + 20));\n        \n        messageContainer.style.left = `${leftPos}px`;\n      }\n    };\n\n    window.addEventListener('resize', updateMessagePosition);\n    // Update position whenever message changes\n    if (tourState.message || tourState.showIntroDialog) {\n      setTimeout(updateMessagePosition, 100);\n    }\n\n    return () => window.removeEventListener('resize', updateMessagePosition);\n  }, [tourState.message, tourState.showIntroDialog]);\n\n  // Hide robot when menu is open (if hideOnMenuOpen is true) or when manually hidden\n  const shouldShowRobot = robotVisible && !(hideOnMenuOpen && menuOpen);\n  \n  return shouldShowRobot ? (\n    <div \n      id=\"robot-assistant\" \n      ref={robotRef} \n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      style={{\n        position: 'fixed',\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n        transform: 'none',\n        cursor: isDraggingRef.current ? 'grabbing' : 'grab',\n        zIndex: 1000,\n        userSelect: 'none'\n      }}\n      className={`${tourState.isMoving ? 'moving' : ''} ${tourState.showIntroDialog ? 'showing-dialog' : ''}`}\n    >\n      <button \n        className=\"robot-hide-button\"\n        onClick={toggleVisibility}\n        style={{\n          position: 'absolute',\n          top: '5px',\n          right: '5px',\n          background: 'transparent',\n          border: 'none',\n          color: '#fff',\n          cursor: 'pointer',\n          fontSize: '20px',\n          padding: '5px',\n          zIndex: 1001,\n          width: '30px',\n          height: '30px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderRadius: '50%',\n          backgroundColor: 'rgba(0,0,0,0.3)'\n        }}\n      >\n        ×\n      </button>\n      <div className=\"robot-container\" ref={containerRef}>\n        <div className={`robot-head ${tourState.isGuiding ? 'guiding' : ''}`}>\n          <div className=\"robot-antenna\"></div>\n          <div className=\"robot-eye-container\">\n            <div className=\"robot-eye\">\n              <div className=\"robot-pupil\" ref={el => eyesRef.current[0] = el}></div>\n            </div>\n            <div className=\"robot-eye\">\n              <div className=\"robot-pupil\" ref={el => eyesRef.current[1] = el}></div>\n            </div>\n          </div>\n          <div className=\"robot-mouth\">\n            <div className=\"robot-mouth-line\"></div>\n          </div>\n        </div>\n        \n        <div className=\"robot-body\">\n          <div className=\"robot-body-display\">\n            <div className={`robot-display-text ${tourState.isThinking ? 'thinking' : ''}`}>\n              {getMessage()}\n            </div>\n          </div>\n          <div className=\"robot-controls\">\n            <div className=\"robot-button\"></div>\n            <div className=\"robot-button\"></div>\n            <div className=\"robot-button\"></div>\n            <div className=\"robot-button\"></div>\n          </div>\n          <div className=\"robot-score\">{t('robotAssistant.score')}: {tourState.score}</div>\n        </div>\n        \n        <div className=\"robot-arm left\">\n          <div className=\"robot-hand\">\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n          </div>\n        </div>\n        \n        <div className=\"robot-arm right\">\n          <div className=\"robot-hand\">\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n            <div className=\"robot-finger\"></div>\n          </div>\n        </div>\n        \n        <div className=\"robot-leg left\">\n          <div className=\"robot-wheel\"></div>\n        </div>\n        \n        <div className=\"robot-leg right\">\n          <div className=\"robot-wheel\"></div>\n        </div>\n        \n        <div className=\"robot-jetpack\">\n          <div className=\"jetpack-flame left\"></div>\n          <div className=\"jetpack-flame right\"></div>\n        </div>\n        \n        <div className=\"robot-trail\">\n          <div className=\"trail-particle\"></div>\n          <div className=\"trail-particle\"></div>\n          <div className=\"trail-particle\"></div>\n        </div>\n        \n        {tourState.isGuiding && (\n          <div className={`robot-message-container ${!tourState.isThinking ? 'visible' : ''}`}>\n            <div className=\"message-title\">\n              {tourSteps[tourState.currentStep]?.title || 'Hello!'}\n            </div>\n            <div className=\"message-content\">\n              {tourState.message}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {tourState.showIntroDialog && (\n        <div className=\"robot-dialog\">\n          <div className=\"dialog-options\">\n            <button onClick={startTour}>{t('robotAssistant.buttons.startTour')}</button>\n            <button onClick={() => setTourState(prev => ({ ...prev, showIntroDialog: false }))}>\n              {t('robotAssistant.buttons.later')}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  ) : null;\n};\n\nexport default RobotAssistant;","import React from 'react';\nimport { useTranslation } from '../../hooks/useTranslation';\nimport './Footer.css';\n\nconst Footer = () => {\n  const { t } = useTranslation();\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer>\n      <div className=\"robot-tracks\">\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n        <div className=\"track\"></div>\n      </div>\n      <div className=\"container\">\n        <p>© {currentYear} Amr Eslim | {t('hero.subtitle')}</p>\n        <p>{t('contact.info.locationValue')}</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import React, { useEffect, useRef } from 'react';\nimport './CircuitBackground.css';\n\nconst CircuitBackground = () => {\n  const backgroundRef = useRef(null);\n\n  useEffect(() => {\n    const createCircuitBackground = () => {\n      const background = backgroundRef.current;\n      if (!background) return;\n\n      // Clear any existing elements\n      background.innerHTML = '';\n\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      \n      // Create horizontal lines\n      for (let i = 0; i < 15; i++) {\n        const line = document.createElement('div');\n        line.classList.add('circuit-line');\n        \n        const top = Math.random() * height;\n        const lineWidth = Math.random() * 300 + 100;\n        const left = Math.random() * (width - lineWidth);\n        \n        line.style.top = `${top}px`;\n        line.style.left = `${left}px`;\n        line.style.width = `${lineWidth}px`;\n        line.style.height = '1px';\n        \n        background.appendChild(line);\n        \n        // Add circuit nodes to some lines\n        if (Math.random() > 0.5) {\n          const node = document.createElement('div');\n          node.classList.add('circuit-node');\n          node.style.top = `${top - 3}px`;\n          node.style.left = `${left + lineWidth - 3}px`;\n          background.appendChild(node);\n        }\n      }\n      \n      // Create vertical lines\n      for (let i = 0; i < 15; i++) {\n        const line = document.createElement('div');\n        line.classList.add('circuit-line');\n        \n        const left = Math.random() * width;\n        const lineHeight = Math.random() * 300 + 100;\n        const top = Math.random() * (height - lineHeight);\n        \n        line.style.top = `${top}px`;\n        line.style.left = `${left}px`;\n        line.style.width = '1px';\n        line.style.height = `${lineHeight}px`;\n        \n        background.appendChild(line);\n        \n        // Add circuit nodes to some lines\n        if (Math.random() > 0.5) {\n          const node = document.createElement('div');\n          node.classList.add('circuit-node');\n          node.style.top = `${top + lineHeight - 3}px`;\n          node.style.left = `${left - 3}px`;\n          background.appendChild(node);\n        }\n      }\n    };\n\n    // Initial creation\n    createCircuitBackground();\n\n    // Recreate on window resize\n    const handleResize = () => {\n      createCircuitBackground();\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return <div className=\"circuit-background\" ref={backgroundRef}></div>;\n};\n\nexport default CircuitBackground;","import React, { useEffect, useState } from 'react';\nimport './CustomCursor.css';\n\nconst CustomCursor = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [hidden, setHidden] = useState(true);\n  const [enlarged, setEnlarged] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  useEffect(() => {\n    let rafId;\n    const updateCursorPosition = (e) => {\n      // Use requestAnimationFrame for smoother cursor movement\n      cancelAnimationFrame(rafId);\n      rafId = requestAnimationFrame(() => {\n        setPosition({ x: e.clientX, y: e.clientY });\n        setHidden(false);\n      });\n    };\n\n    const handleMouseOver = (e) => {\n      const isDraggableElement = e.target.closest('#robot-assistant') !== null;\n      \n      if (e.target.tagName === 'A' || \n          e.target.tagName === 'BUTTON' || \n          e.target.classList.contains('robot-part') ||\n          e.target.classList.contains('nav-toggle') ||\n          e.target.classList.contains('language-item') ||\n          e.target.classList.contains('interest-item') ||\n          e.target.classList.contains('timeline-item') ||\n          e.target.classList.contains('robot-project') ||\n          e.target.classList.contains('control-btn')) {\n        setEnlarged(true);\n      } else {\n        setEnlarged(false);\n      }\n\n      // Update dragging state based on robot interaction\n      if (isDraggableElement) {\n        document.body.style.cursor = 'grab';\n      } else {\n        document.body.style.cursor = '';\n      }\n    };\n\n    const handleMouseDown = (e) => {\n      if (e.target.closest('#robot-assistant') !== null) {\n        setIsDragging(true);\n        document.body.style.cursor = 'grabbing';\n      }\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(false);\n      document.body.style.cursor = '';\n    };\n\n    const handleMouseOut = () => {\n      setHidden(true);\n    };\n\n    document.addEventListener('mousemove', updateCursorPosition);\n    document.addEventListener('mouseover', handleMouseOver);\n    document.addEventListener('mouseout', handleMouseOut);\n    document.addEventListener('mousedown', handleMouseDown);\n    document.addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      document.removeEventListener('mousemove', updateCursorPosition);\n      document.removeEventListener('mouseover', handleMouseOver);\n      document.removeEventListener('mouseout', handleMouseOut);\n      document.removeEventListener('mousedown', handleMouseDown);\n      document.removeEventListener('mouseup', handleMouseUp);\n      cancelAnimationFrame(rafId);\n    };\n  }, []);\n\n  return (\n    <div \n      className={`custom-cursor ${hidden ? 'hidden' : ''} ${enlarged ? 'enlarged' : ''} ${isDragging ? 'dragging' : ''}`}\n      style={{ \n        left: `${position.x}px`, \n        top: `${position.y}px`,\n        transform: 'translate(-50%, -50%)'\n      }}\n    />\n  );\n};\n\nexport default CustomCursor;","import React from 'react';\r\nimport { useLanguage } from '../../context/LanguageContext';\r\nimport './LanguageSwitcher.css';\r\n\r\nconst LanguageSwitcher = () => {\r\n  const { language, toggleLanguage } = useLanguage();\r\n\r\n  return (\r\n    <button \r\n      className=\"language-switcher\"\r\n      onClick={toggleLanguage}\r\n      aria-label={`Switch to ${language === 'en' ? 'German' : 'English'}`}\r\n    >\r\n      {language === 'en' ? 'DE' : 'EN'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Hero from './components/Hero/Hero';\nimport About from './components/About/About';\nimport Skills from './components/Skills/Skills';\nimport Experience from './components/Experience/Experience';\nimport Projects from './components/Projects/Projects';\nimport Languages from './components/Languages/Languages';\nimport Interests from './components/Interests/Interests';\nimport Contact from './components/Contact/Contact';\nimport Navigation from './components/Navigation/Navigation';\nimport RobotAssistant from './components/RobotAssistant/RobotAssistant';\nimport Footer from './components/Footer/Footer';\nimport CircuitBackground from './components/CircuitBackground/CircuitBackground';\nimport CustomCursor from './components/CustomCursor/CustomCursor';\nimport LanguageSwitcher from './components/LanguageSwitcher/LanguageSwitcher';\nimport { LanguageProvider } from './context/LanguageContext';\nimport './App.css';\n\nfunction App() {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  useEffect(() => {\n    // Initialize intersection observer for animations\n    const observerOptions = {\n      threshold: 0.1,\n      rootMargin: '0px 0px -50px 0px'\n    };\n    \n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('visible');\n          \n          // For progress bars and skill meters\n          if (entry.target.classList.contains('language-item') || entry.target.classList.contains('chip')) {\n            const progressBars = entry.target.querySelectorAll('.skill-progress');\n            progressBars.forEach(progressBar => {\n              const width = progressBar.getAttribute('data-width') + '%';\n              setTimeout(() => {\n                progressBar.style.width = width;\n              }, 300);\n            });\n          }\n        }\n      });\n    }, observerOptions);\n    \n    // Observe elements\n    document.querySelectorAll('.timeline-item, .robot-project, .language-item, .interest-item').forEach(item => {\n      observer.observe(item);\n    });\n    \n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return (\n    <LanguageProvider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <CustomCursor />\n          <CircuitBackground />\n          <LanguageSwitcher />\n        \n          <Navigation onMenuOpenChange={(isOpen) => setMenuOpen(isOpen)} />\n          <RobotAssistant hideOnMenuOpen menuOpen={menuOpen} />\n        \n          <main>\n            <Hero />\n            <About />\n            <Skills />\n            <Experience />\n            <Projects />\n            <Languages />\n            <Interests />\n            <Contact />\n          </main>\n        \n          <Footer />\n        </div>\n      </Router>\n    </LanguageProvider>\n  );\n}\n\nexport default App;\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}