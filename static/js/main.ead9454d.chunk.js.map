{"version":3,"sources":["components/ProfilePicture/ProfilePicture.js","context/LanguageContext.js","hooks/useTranslation.js","components/Hero/Hero.js","components/About/About.js","components/Skills/Skills.js","components/Experience/TimelineItem.js","components/Experience/Experience.js","components/Projects/Modal.js","components/Projects/ImageCarousel.js","components/Projects/ProjectCard.js","components/Projects/Projects.js","components/Languages/Languages.js","components/Interests/Interests.js","components/Contact/Contact.js","components/Navigation/Navigation.js","components/Footer/Footer.js","components/CircuitBackground/CircuitBackground.js","components/CustomCursor/CustomCursor.js","components/LanguageSwitcher/LanguageSwitcher.js","components/LoadingPage/LoadingPage.js","App.js","index.js"],"names":["ProfilePicture","frameRef","useRef","useEffect","handleMouseMove","e","current","rect","getBoundingClientRect","x","clientX","left","width","rotateX","clientY","top","height","rotateY","style","transform","handleMouseLeave","frame","addEventListener","removeEventListener","React","createElement","className","ref","src","alt","LanguageContext","createContext","LanguageProvider","_ref","children","language","setLanguage","useState","Provider","value","toggleLanguage","prevLang","useLanguage","useContext","translations","en","de","useTranslation","t","key","keys","split","k","_value","Hero","robotModelRef","currentRef","y","id","HashLink","smooth","to","toUpperCase","About","map","paragraph","index","SkillMeter","name","percentage","progressRef","observer","IntersectionObserver","entries","isIntersecting","setTimeout","threshold","observe","unobserve","data-width","Array","_","Skills","TimelineItem","forwardRef","date","title","description","details","side","Experience","timelineItemsRef","forEach","entry","target","classList","add","rootMargin","elements","item","el","Modal","isOpen","onClose","project","modalRef","contentRef","handleEsc","event","document","body","overflow","createPortal","onClick","stopPropagation","aria-label","subtitle","ProjectVisual","type","visualType","images","features","feature","formattedFeature","replace","dangerouslySetInnerHTML","__html","technologies","tech","references","length","href","url","rel","ImageCarousel","currentIndex","setCurrentIndex","Fragment","prevSlide","prevIndex","nextSlide","ProjectCard","_ref2","isModalOpen","setIsModalOpen","openModal","preventDefault","tagName","closest","slice","demoLink","closeModal","Projects","projectsRef","projectsData","LanguageItem","proficiency","itemRef","currentItemRef","Languages","Interests","interest","Contact","Navigation","onMenuOpenChange","menuOpen","setMenuOpen","activeSection","setActiveSection","handleScroll","sections","scrollPosition","window","scrollY","innerHeight","section","element","getElementById","offsetTop","offsetHeight","closeMenu","NavLinks","toggleMenu","newMenuState","Footer","currentYear","Date","getFullYear","CircuitBackground","backgroundRef","styles","circuitBackground","position","zIndex","background","pointerEvents","gridPattern","backgroundImage","backgroundSize","animation","circuitLine","boxShadow","borderRadius","circuitLineHorizontal","circuitLineVertical","circuitNode","dataStream","filter","dataStreamHorizontal","dataStreamVertical","ambientGlow","floatingDot","styleElement","textContent","head","appendChild","createSophisticatedBackground","innerHTML","innerWidth","createGridPattern","createCircuitGrid","createDataStreams","createAmbientEffects","createFloatingElements","grid","Object","assign","lineCount","Math","min","floor","i","line","random","lineWidth","animationDelay","node","lineHeight","streamCount","stream","animationDuration","glowCount","glow","size","dotCount","dot","scale","resizeTimeout","handleResize","clearTimeout","querySelectorAll","includes","remove","CustomCursor","setPosition","hidden","setHidden","enlarged","setEnlarged","isDragging","setIsDragging","rafId","updateCursorPosition","cancelAnimationFrame","requestAnimationFrame","handleMouseOver","isDraggableElement","contains","cursor","handleMouseDown","handleMouseUp","handleMouseOut","LanguageSwitcher","LoadingPage","onLoadingComplete","progress","setProgress","loadingText","setLoadingText","bootSequence","setBootSequence","currentCommand","setCurrentCommand","isBootComplete","setIsBootComplete","isTransitioning","setIsTransitioning","loadingSteps","bootCommands","progressInterval","textIndex","commandIndex","setInterval","updateProgress","prev","newProgress","stepIndex","clearInterval","handleEnterDashboard","from","command","undefined","toString","padStart","round","App","isLoading","setIsLoading","progressBar","getAttribute","disconnect","handleLoadingComplete","Router","basename","process","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.ead9454d.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport './ProfilePicture.css';\r\n\r\nconst ProfilePicture = () => {\r\n  const frameRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!frameRef.current) return;\r\n      \r\n      const rect = frameRef.current.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - rect.width / 2;\r\n      const y = e.clientY - rect.top - rect.height / 2;\r\n      \r\n      // Calculate rotation based on mouse position\r\n      const rotateX = (y / rect.height) * 20;\r\n      const rotateY = (x / rect.width) * 20;\r\n      \r\n      frameRef.current.style.transform = `perspective(1000px) rotateX(${-rotateX}deg) rotateY(${rotateY}deg)`;\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      if (frameRef.current) {\r\n        frameRef.current.style.transform = 'perspective(1000px) rotateX(0) rotateY(0)';\r\n      }\r\n    };\r\n\r\n    const frame = frameRef.current;\r\n    if (frame) {\r\n      frame.addEventListener('mousemove', handleMouseMove);\r\n      frame.addEventListener('mouseleave', handleMouseLeave);\r\n    }\r\n\r\n    return () => {\r\n      if (frame) {\r\n        frame.removeEventListener('mousemove', handleMouseMove);\r\n        frame.removeEventListener('mouseleave', handleMouseLeave);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile-picture-container\" ref={frameRef}>\r\n      <div className=\"profile-frame\">\r\n        <div className=\"frame-corner top-left\"></div>\r\n        <div className=\"frame-corner top-right\"></div>\r\n        <div className=\"frame-corner bottom-left\"></div>\r\n        <div className=\"frame-corner bottom-right\"></div>\r\n        <div className=\"frame-edge top\"></div>\r\n        <div className=\"frame-edge right\"></div>\r\n        <div className=\"frame-edge bottom\"></div>\r\n        <div className=\"frame-edge left\"></div>\r\n        <div className=\"scanning-line\"></div>\r\n        <div className=\"profile-image\">\r\n          <img src={process.env.PUBLIC_URL + '/images/profile.jpg'} alt=\"Amr Eslim\" />\r\n        </div>\r\n        <div className=\"frame-overlay\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePicture;","import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  const toggleLanguage = () => {\r\n    setLanguage(prevLang => prevLang === 'en' ? 'de' : 'en');\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, toggleLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => useContext(LanguageContext);\r\n","import { useLanguage } from '../context/LanguageContext';\r\nimport en from '../translations/en.json';\r\nimport de from '../translations/de.json';\r\n\r\nconst translations = { en, de };\r\n\r\nexport const useTranslation = () => {\r\n  const { language } = useLanguage();\r\n\r\n  const t = (key) => {\r\n    const keys = key.split('.');\r\n    let value = translations[language];\r\n    \r\n    for (const k of keys) {\r\n      value = value?.[k];\r\n    }\r\n    \r\n    return value || key;\r\n  };\r\n\r\n  return { t };\r\n};\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport ProfilePicture from '../ProfilePicture/ProfilePicture';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './Hero.css';\r\n\r\nconst Hero = () => {\r\n  const robotModelRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const currentRef = robotModelRef.current;\r\n    if (currentRef) {\r\n      const handleMouseMove = (e) => {\r\n        const rect = currentRef.getBoundingClientRect();\r\n        const x = e.clientX - rect.left - rect.width / 2;\r\n        const y = e.clientY - rect.top - rect.height / 2;\r\n        \r\n        currentRef.style.transform = `rotateY(${x * 0.05}deg) rotateX(${-y * 0.05}deg)`;\r\n      };\r\n      \r\n      const handleMouseLeave = () => {\r\n        currentRef.style.transform = '';\r\n      };\r\n      \r\n      currentRef.addEventListener('mousemove', handleMouseMove);\r\n      currentRef.addEventListener('mouseleave', handleMouseLeave);\r\n      \r\n      return () => {\r\n        currentRef.removeEventListener('mousemove', handleMouseMove);\r\n        currentRef.removeEventListener('mouseleave', handleMouseLeave);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section id=\"hero\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <div className=\"hero-flex\">\r\n          <div className=\"hero-text\">\r\n            <h1>Amr Eslim</h1>\r\n            <p className=\"hero-subtitle\">{t('hero.subtitle')}</p>\r\n            \r\n            <div className=\"hero-info\">\r\n              <p>{t('hero.info.greeting')}</p>\r\n              <p>{t('hero.info.location')}</p>\r\n              <p>{t('hero.info.education')}</p>\r\n              <p>{t('hero.info.specialization')}</p>\r\n              <p>{t('hero.info.scroll')}</p>\r\n            </div>\r\n            \r\n            <div className=\"cta-buttons\">\r\n              <HashLink smooth to=\"#about\" className=\"cta-button\">{t('ui.buttons.explore').toUpperCase()}</HashLink>\r\n              <HashLink smooth to=\"#contact\" className=\"cta-button\">{t('ui.buttons.connect').toUpperCase()}</HashLink>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"hero-profile\">\r\n            <ProfilePicture />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;","import React from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section id=\"about\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <h2 className=\"section-title\">{t('about.title')}</h2>\r\n        <div className=\"about-content\">\r\n          {t('about.content').map((paragraph, index) => (\r\n            <p key={index}>{paragraph}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;","import React, { useEffect, useRef } from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './Skills.css';\r\n\r\nconst SkillMeter = ({ name, percentage }) => {\r\n  const progressRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting && progressRef.current) {\r\n          setTimeout(() => {\r\n            progressRef.current.style.width = `${percentage}%`;\r\n          }, 300);\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    const currentRef = progressRef.current;\r\n    if (currentRef) {\r\n      observer.observe(currentRef);\r\n    }\r\n\r\n    return () => {\r\n      if (currentRef) {\r\n        observer.unobserve(currentRef);\r\n      }\r\n    };\r\n  }, [percentage]);\r\n\r\n  return (\r\n    <div>\r\n      <p>{name}</p>\r\n      <div className=\"skill-meter\">\r\n        <div \r\n          className=\"skill-progress\" \r\n          ref={progressRef}\r\n          data-width={percentage}\r\n          style={{ width: '0%' }} // Start at 0, will be animated to the target width\r\n        >\r\n          <div className=\"skill-dots\">\r\n            {[...Array(10)].map((_, index) => (\r\n              <div className=\"skill-dot\" key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Skills = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section id=\"skills\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <h2 className=\"section-title\">{t('skills.title')}</h2>\r\n        <div className=\"circuit-board\">\r\n          <div className=\"chip\">\r\n            <h3 className=\"chip-title\">{t('skills.categories.programming.title')}</h3>\r\n            <SkillMeter name={t('skills.categories.programming.skills.cpp')} percentage={90} />\r\n            <SkillMeter name={t('skills.categories.programming.skills.rust')} percentage={70} />\r\n            <SkillMeter name={t('skills.categories.programming.skills.python')} percentage={85} />\r\n            <SkillMeter name={t('skills.categories.programming.skills.sql')} percentage={75} />\r\n          </div>\r\n          \r\n          <div className=\"chip\">\r\n            <h3 className=\"chip-title\">{t('skills.categories.web.title')}</h3>\r\n            <SkillMeter name={t('skills.categories.web.skills.frontend')} percentage={80} />\r\n            <SkillMeter name={t('skills.categories.web.skills.flask')} percentage={75} />\r\n            <SkillMeter name={t('skills.categories.web.skills.react')} percentage={70} />\r\n          </div>\r\n          \r\n          <div className=\"chip\">\r\n            <h3 className=\"chip-title\">{t('skills.categories.tools.title')}</h3>\r\n            <SkillMeter name={t('skills.categories.tools.skills.git')} percentage={85} />\r\n            <SkillMeter name={t('skills.categories.tools.skills.linux')} percentage={90} />\r\n            <SkillMeter name={t('skills.categories.tools.skills.docker')} percentage={75} />\r\n          </div>\r\n          \r\n          <div className=\"chip\">\r\n            <h3 className=\"chip-title\">{t('skills.categories.embedded.title')}</h3>\r\n            <SkillMeter name={t('skills.categories.embedded.skills.embedded_linux')} percentage={85} />\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Skills;","import React, { forwardRef } from 'react';\r\n\r\nconst TimelineItem = forwardRef(({ date, title, description, details, side }, ref) => {\r\n  return (\r\n    <div \r\n      className={`timeline-item ${side}`} \r\n      ref={ref}\r\n    >\r\n      <div className=\"timeline-content\">\r\n        <div className=\"timeline-date\">{date}</div>\r\n        <h3 className=\"timeline-title\">{title}</h3>\r\n        <p>{description}</p>\r\n        <p>{details}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default TimelineItem;","import React, { useEffect, useRef } from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport TimelineItem from './TimelineItem';\r\nimport './Experience.css';\r\n\r\nconst Experience = () => {\r\n  const { t } = useTranslation();\r\n  const timelineItemsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            entry.target.classList.add('visible');\r\n          }\r\n        });\r\n      },\r\n      { \r\n        threshold: 0.1,\r\n        rootMargin: '0px 0px -50px 0px'\r\n      }\r\n    );\r\n\r\n    const elements = timelineItemsRef.current;\r\n    if (elements) {\r\n      elements.forEach(ref => {\r\n        if (ref) observer.observe(ref);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (elements) {\r\n        elements.forEach(ref => {\r\n          if (ref) observer.unobserve(ref);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"experience\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <h2 className=\"section-title\">{t('experience.title')}</h2>\r\n        <div className=\"timeline\">\r\n          {t('experience.items').map((item, index) => (\r\n            <TimelineItem\r\n              key={item.id}\r\n              date={item.date}\r\n              title={item.title}\r\n              description={item.description}\r\n              details={item.details}\r\n              side={item.side}\r\n              ref={el => timelineItemsRef.current[index] = el}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Experience;","import React, { useEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport { ProjectVisual } from './ProjectCard';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ isOpen, onClose, project }) => {\r\n  const { t } = useTranslation();\r\n  const modalRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', handleEsc);\r\n      document.body.style.overflow = 'hidden';\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEsc);\r\n      document.body.style.overflow = 'unset';\r\n    };\r\n  }, [isOpen, onClose]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return createPortal(\r\n    <div className={`modal-backdrop ${isOpen ? 'visible' : ''}`} ref={modalRef} onClick={onClose}>\r\n      <div className=\"modal-content\" ref={contentRef} onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"modal-close\" onClick={onClose} aria-label=\"Close modal\">×</button>\r\n        \r\n        <div className=\"modal-header\">\r\n          <h2 className=\"modal-title\">{project.title}</h2>\r\n          {project.subtitle && <h4 className=\"modal-subtitle\">{project.subtitle}</h4>}\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"project-visual\">\r\n            <ProjectVisual type={project.visualType} images={project.images} />\r\n          </div>\r\n\r\n          <div className=\"modal-description-section\">\r\n            <h5>Project Overview</h5>\r\n            <p className=\"modal-description\">{project.description}</p>\r\n          </div>\r\n\r\n          {project.features && (\r\n            <div className=\"modal-features-section\">\r\n              <h5>Key Features & Achievements</h5>\r\n              <ul className=\"modal-feature-list\">\r\n                {project.features.map((feature, index) => {\r\n                  // Parse markdown-style formatting and enhance colons\r\n                  const formattedFeature = feature\r\n                    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n                    .replace(/✅\\s*/g, '')\r\n                    .replace(/(<\\/strong>):\\s*/g, '$1<span class=\"feature-colon\">:</span> ');\r\n                  \r\n                  return (\r\n                    <li key={index} dangerouslySetInnerHTML={{__html: formattedFeature}}></li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {project.technologies && (\r\n            <div className=\"modal-tech\">\r\n              <h5>Technologies Used:</h5>\r\n              <div className=\"tech-tags-container\">\r\n                {project.technologies.map((tech, index) => (\r\n                  <span key={index} className=\"modal-tech-tag\">{tech}</span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {project.references && project.references.length > 0 && (\r\n            <div className=\"modal-references\">\r\n              <h5>{t('ui.sections.references')}:</h5>\r\n              <ul>\r\n                {project.references.map((ref, index) => (\r\n                  <li key={index}>\r\n                    <a href={ref.url} target=\"_blank\" rel=\"noopener noreferrer\">{ref.title}</a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './ImageCarousel.css';\r\n\r\nconst ImageCarousel = ({ images }) => {\r\n  const { t } = useTranslation();\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  if (!images || images.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) => \r\n      prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) => \r\n      prevIndex === 0 ? images.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel-container\">\r\n      <img \r\n        src={images[currentIndex]} \r\n        alt={`Slide ${currentIndex + 1}`}\r\n        className=\"carousel-image\"\r\n      />\r\n      {images.length > 1 && (\r\n        <>\r\n          <button \r\n            className=\"carousel-button prev\" \r\n            onClick={prevSlide}\r\n            aria-label=\"Previous slide\"\r\n          >\r\n            ‹\r\n          </button>\r\n          <button \r\n            className=\"carousel-button next\" \r\n            onClick={nextSlide}\r\n            aria-label=\"Next slide\"\r\n          >\r\n            ›\r\n          </button>\r\n          <div className=\"carousel-dots\">\r\n            {images.map((_, index) => (\r\n              <button\r\n                key={index}\r\n                className={`carousel-dot ${index === currentIndex ? 'active' : ''}`}\r\n                onClick={() => setCurrentIndex(index)}\r\n                aria-label={`Go to slide ${index + 1}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import React, { forwardRef, useState } from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './ProjectCard.css';\r\nimport Modal from './Modal';\r\nimport ImageCarousel from './ImageCarousel';\r\n\r\n// Visual fallback for various project types\r\nexport const ProjectVisual = ({ type, images }) => {\r\n  if (images && images.length > 0) {\r\n    return <ImageCarousel images={images} />;\r\n  }\r\n  switch (type) {\r\n    case 'embedded-system':\r\n      return (\r\n        <div className=\"project-robot\">\r\n          {/* ESP32/Arduino visualization */}\r\n        </div>\r\n      );\r\n    case 'web-dashboard':\r\n      return (\r\n        <div className=\"project-robot\">\r\n          {/* Dashboard visualization */}\r\n        </div>\r\n      );\r\n    case 'mentoring-app':\r\n      return (\r\n        <div className=\"project-robot\">\r\n          {/* App visualization */}\r\n        </div>\r\n      );\r\n    case 'iot-system':\r\n      return (\r\n        <div className=\"project-robot\">\r\n          {/* IoT sensor network visualization */}\r\n        </div>\r\n      );\r\n    case 'robotic-arm':\r\n      return (\r\n        <div className=\"project-robot\">\r\n          {/* Robotic arm visualization */}\r\n        </div>\r\n      );\r\n    case 'backend-system':\r\n      return (\r\n        <div className=\"project-robot\">\r\n          {/* Backend system visualization */}\r\n        </div>\r\n      );\r\n    default:\r\n      return <div className=\"project-robot\"></div>;\r\n  }\r\n};\r\n\r\n// Main card component\r\nconst ProjectCard = forwardRef(({ project }, ref) => {\r\n  const { t } = useTranslation();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const openModal = (e) => {\r\n    e.preventDefault();\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (e) => {\r\n    // Prevent opening modal when clicking on links\r\n    if (e.target.tagName === 'A' || e.target.closest('a')) {\r\n      return;\r\n    }\r\n    openModal(e);\r\n  };\r\n\r\n  const handleGithubClick = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"robot-project\" \r\n      ref={ref}\r\n      onClick={handleCardClick}\r\n    >\r\n      <div className=\"project-header\">\r\n        <div className=\"project-image\">\r\n          <ProjectVisual type={project.visualType} images={project.images} />\r\n          <div className=\"project-overlay\">\r\n            <span className=\"click-hint\">Click to view details</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"project-content\">\r\n        <div className=\"project-details\">\r\n          <h3 className=\"project-title\">{project.title}</h3>\r\n          {project.subtitle && <p className=\"project-subtitle\">{project.subtitle}</p>}\r\n          \r\n          {/* Technology badges */}\r\n          {project.technologies && (\r\n            <div className=\"tech-badges\">\r\n              {project.technologies.slice(0, 4).map((tech, index) => (\r\n                <span key={index} className=\"tech-badge\">\r\n                  {tech}\r\n                </span>\r\n              ))}\r\n              {project.technologies.length > 4 && (\r\n                <span className=\"tech-badge more-tech\">\r\n                  +{project.technologies.length - 4} more\r\n                </span>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"project-actions\">\r\n          <button onClick={openModal} className=\"project-link primary\">\r\n            {t('ui.buttons.details')}\r\n          </button>\r\n          {project.demoLink && (\r\n            <a \r\n              href={project.demoLink} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\" \r\n              className=\"project-link secondary\"\r\n              onClick={handleGithubClick}\r\n            >\r\n              {t('ui.buttons.demo')}\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        project={project}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProjectCard;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport ProjectCard from './ProjectCard';\r\nimport './Projects.css';\r\n\r\nconst Projects = () => {\r\n  const { t } = useTranslation();\r\n  const projectsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            entry.target.classList.add('visible');\r\n          }\r\n        });\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n        rootMargin: '0px 0px -50px 0px'\r\n      }\r\n    );\r\n\r\n    const elements = projectsRef.current;\r\n    if (elements) {\r\n      elements.forEach(ref => {\r\n        if (ref) observer.observe(ref);\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (elements) {\r\n        elements.forEach(ref => {\r\n          if (ref) observer.unobserve(ref);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n  const projectsData = [\r\n    {\r\n      id: 1,\r\n      ...t('projects.snake_robot'),\r\n      technologies: [\r\n        \"ESP32\", \"C++\", \"CPG Control Algorithms\", \"3D Printing (TPU, PLA+)\",\r\n        \"Arduino Framework\", \"React\", \"WebSockets\", \"Motion Tracking (Kinovea)\",\r\n        \"ACS712 Current Sensor\", \"Onshape CAD\", \"CSV Data Logging\"\r\n      ],\r\n      visualType: \"embedded-system\",\r\n      images: [\r\n        process.env.PUBLIC_URL + '/images/snake-robot1.jpg',\r\n        process.env.PUBLIC_URL + '/images/snake-robot2.jpg'\r\n      ],\r\n      demoLink: \"https://github.com/AmrEslim/snake_robot\"\r\n    },\r\n    {\r\n      id: 2,\r\n      ...t('projects.cryptify'),\r\n      technologies: [\"Rust\", \"Actix-web\", \"Ring Cryptography\", \"SQLite\", \"React\", \"TypeScript\", \"Docker\", \"AES-256-GCM\", \"Argon2id\"],\r\n      visualType: \"security-app\",\r\n      images: [process.env.PUBLIC_URL + '/images/Cryptify-logo.png'],\r\n      demoLink: \"https://github.com/AmrEslim/Cryptify\"\r\n    },\r\n    {\r\n      id: 3,\r\n      ...t('projects.sidequester'),\r\n      technologies: [\"ESP32\", \"Arduino\", \"LoRa\", \"GPS\", \"HMC5883L Compass\", \"OLED Display\", \"C++\", \"TinyGPS++\"],\r\n      visualType: \"iot-device\",\r\n      images: [process.env.PUBLIC_URL + '/images/SideQuester.png'],\r\n      demoLink: \"https://github.com/AmrEslim/SideQuester\"\r\n    },\r\n    {\r\n      id: 4,\r\n      ...t('projects.cv_portfolio'),\r\n      technologies: [\"React\", \"JavaScript\", \"HTML/CSS\", \"GitHub Pages\", \"Responsive Design\", \"i18n\"],\r\n      visualType: \"web-app\",\r\n      images: [process.env.PUBLIC_URL + '/images/Portfolio.png'],\r\n      demoLink: \"https://github.com/AmrEslim/CV\"\r\n    },\r\n    {\r\n      id: 5,\r\n      ...t('projects.opencv_auto'),\r\n      technologies: [\"Python\", \"OpenCV\", \"Computer Vision\", \"Object Detection\", \"Tracking Algorithms\"],\r\n      visualType: \"computer-vision\",\r\n      images: [process.env.PUBLIC_URL + '/images/OpenCV.png'],\r\n      demoLink: \"https://github.com/AmrEslim/OpenCV-car\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <section id=\"projects\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <h2 className=\"section-title\">{t('projects.title')}</h2>\r\n        <div className=\"robotics-projects\">\r\n          {projectsData.map((project, index) => (\r\n            <ProjectCard\r\n              key={project.id}\r\n              project={project}\r\n              ref={el => projectsRef.current[index] = el}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;","import React, { useEffect, useRef } from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './Languages.css';\r\n\r\nconst LanguageItem = ({ language, proficiency, percentage }) => {\r\n  const itemRef = useRef(null);\r\n  const progressRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          itemRef.current.classList.add('visible');\r\n          \r\n          if (progressRef.current) {\r\n            setTimeout(() => {\r\n              progressRef.current.style.width = `${percentage}%`;\r\n            }, 300);\r\n          }\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    const currentItemRef = itemRef.current;\r\n    if (currentItemRef) {\r\n      observer.observe(currentItemRef);\r\n    }\r\n\r\n    return () => {\r\n      if (currentItemRef) {\r\n        observer.unobserve(currentItemRef);\r\n      }\r\n    };\r\n  }, [percentage]);\r\n\r\n  return (\r\n    <div className=\"language-item\" ref={itemRef}>\r\n      <h3 className=\"language-name\">{language}</h3>\r\n      <p>{proficiency}</p>\r\n      <div className=\"skill-meter\">\r\n        <div \r\n          className=\"skill-progress\" \r\n          ref={progressRef} \r\n          data-width={percentage}\r\n          style={{ width: '0%' }}\r\n        >\r\n          <div className=\"skill-dots\">\r\n            {[...Array(10)].map((_, index) => (\r\n              <div className=\"skill-dot\" key={index}></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Languages = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section id=\"languages\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <h2 className=\"section-title\">{t('languages.title')}</h2>\r\n        <div className=\"languages-container\">\r\n          {t('languages.items').map(item => (\r\n            <LanguageItem\r\n              key={item.id}\r\n              language={item.language}\r\n              proficiency={item.proficiency}\r\n              percentage={item.percentage}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Languages;","import React from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './Interests.css';\r\n\r\nconst Interests = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section id=\"interests\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <h2 className=\"section-title\">{t('interests.title')}</h2>\r\n        <div className=\"interests-container\">\r\n          {t('interests.items').map((interest, index) => (\r\n            <div className=\"interest-item\" key={index}>\r\n              {interest}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Interests;","import React from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './Contact.css';\r\n\r\nconst Contact = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <section id=\"contact\" className=\"scene\">\r\n      <div className=\"content-container\">\r\n        <h2 className=\"section-title\">{t('contact.title')}</h2>\r\n          <div className=\"contact-info\">\r\n          <div className=\"contact-item\">\r\n            <span className=\"contact-label\">{t('contact.info.location')}</span>\r\n            <span>{t('contact.info.locationValue')}</span>\r\n          </div>\r\n        </div>\r\n          <div className=\"contact-container\">\r\n          <div className=\"contact-text\">\r\n            <p>{t('contact.text')}</p>\r\n          </div>\r\n          <div className=\"contact-buttons\">\r\n            <a href=\"mailto:Eslim.amr@gmail.com\" className=\"cta-button\">{t('contact.buttons.email')}</a>\r\n            <a href=\"https://www.linkedin.com/in/amr-eslim\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"cta-button\">{t('contact.buttons.linkedin')}</a>\r\n          </div>\r\n          \r\n          {/* <div className=\"contact-form\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" required />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"Your Email\" required />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea className=\"form-control\" rows=\"5\" placeholder=\"Your Message\" required></textarea>\r\n              </div>\r\n              <button type=\"submit\" className=\"cta-button\">Send Message</button>\r\n            </form>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React, { useState, useEffect } from 'react';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onMenuOpenChange }) => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [activeSection, setActiveSection] = useState('hero');\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {      const sections = [\r\n        'hero', 'about', 'skills', 'experience', \r\n        'projects', 'languages', \r\n        'interests', 'contact'\r\n      ];\r\n      \r\n      const scrollPosition = window.scrollY + window.innerHeight / 3;\r\n      \r\n      for (const section of sections) {\r\n        const element = document.getElementById(section);\r\n        if (element) {\r\n          const { offsetTop, offsetHeight } = element;\r\n          if (scrollPosition >= offsetTop && scrollPosition < offsetTop + offsetHeight) {\r\n            setActiveSection(section);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    handleScroll(); // Initial check\r\n\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    const newMenuState = !menuOpen;\r\n    setMenuOpen(newMenuState);\r\n    if (onMenuOpenChange) {\r\n      onMenuOpenChange(newMenuState);\r\n    }\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setMenuOpen(false);\r\n    if (onMenuOpenChange) {\r\n      onMenuOpenChange(false);\r\n    }\r\n  };\r\n\r\n  const NavLinks = ({ onClick }) => (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#hero\" \r\n          onClick={onClick}\r\n          className={activeSection === 'hero' ? 'active' : ''}\r\n        >\r\n          {t('nav.home')}\r\n        </HashLink>\r\n      </li>\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#about\" \r\n          onClick={onClick}\r\n          className={activeSection === 'about' ? 'active' : ''}\r\n        >\r\n          {t('nav.about')}\r\n        </HashLink>\r\n      </li>\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#skills\" \r\n          onClick={onClick}\r\n          className={activeSection === 'skills' ? 'active' : ''}\r\n        >\r\n          {t('nav.skills')}\r\n        </HashLink>\r\n      </li>\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#experience\" \r\n          onClick={onClick}\r\n          className={activeSection === 'experience' ? 'active' : ''}\r\n        >\r\n          {t('nav.experience')}\r\n        </HashLink>\r\n      </li>\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#projects\" \r\n          onClick={onClick}\r\n          className={activeSection === 'projects' ? 'active' : ''}\r\n        >\r\n          {t('nav.projects')}\r\n        </HashLink>\r\n      </li>\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#languages\" \r\n          onClick={onClick}\r\n          className={activeSection === 'languages' ? 'active' : ''}\r\n        >\r\n          {t('nav.languages')}\r\n        </HashLink>\r\n      </li>\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#interests\" \r\n          onClick={onClick}\r\n          className={activeSection === 'interests' ? 'active' : ''}\r\n        >\r\n          {t('nav.interests')}\r\n        </HashLink>\r\n      </li>\r\n      <li>\r\n        <HashLink \r\n          smooth \r\n          to=\"#contact\" \r\n          onClick={onClick}\r\n          className={activeSection === 'contact' ? 'active' : ''}\r\n        >\r\n          {t('nav.contact')}\r\n        </HashLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Horizontal Navigation for Desktop */}\r\n      <nav className=\"nav-horizontal\">\r\n        <NavLinks onClick={() => {}} />\r\n      </nav>\r\n\r\n      {/* Mobile Navigation */}\r\n      <div className=\"nav-container\">\r\n        <button className=\"nav-toggle\" onClick={toggleMenu}>☰</button>\r\n      </div>\r\n      \r\n      <nav className={`nav-menu ${menuOpen ? 'active' : ''}`}>\r\n        <button className=\"nav-close\" onClick={closeMenu}>✕</button>\r\n        <NavLinks onClick={closeMenu} />\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { useTranslation } from '../../hooks/useTranslation';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation();\r\n  const currentYear = new Date().getFullYear();\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <p>© {currentYear} Amr Eslim | {t('hero.subtitle')}</p>\r\n        <p>{t('contact.info.locationValue')}</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useEffect, useRef } from 'react';\r\n\r\nconst CircuitBackground = () => {\r\n  const backgroundRef = useRef(null);\r\n\r\n  // Embedded styles for sophisticated circuit background\r\n  const styles = {\r\n    circuitBackground: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      zIndex: -1,\r\n      background: 'linear-gradient(135deg, #0a0a0f 0%, #151520 25%, #1a1a2e 50%, #16213e 75%, #0f3460 100%)',\r\n      overflow: 'hidden',\r\n      pointerEvents: 'none',\r\n    },\r\n    gridPattern: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundImage: `\r\n        linear-gradient(rgba(0, 136, 255, 0.03) 1px, transparent 1px),\r\n        linear-gradient(90deg, rgba(0, 136, 255, 0.03) 1px, transparent 1px)\r\n      `,\r\n      backgroundSize: '50px 50px',\r\n      animation: 'gridPulse 12s ease-in-out infinite',\r\n    },\r\n    circuitLine: {\r\n      position: 'absolute',\r\n      background: 'linear-gradient(90deg, transparent, rgba(0, 255, 157, 0.4), rgba(0, 136, 255, 0.6), rgba(0, 255, 157, 0.4), transparent)',\r\n      boxShadow: '0 0 10px rgba(0, 255, 157, 0.3), inset 0 0 5px rgba(0, 136, 255, 0.2)',\r\n      borderRadius: '1px',\r\n    },\r\n    circuitLineHorizontal: {\r\n      height: '2px',\r\n      animation: 'circuitFlow 8s linear infinite',\r\n    },\r\n    circuitLineVertical: {\r\n      width: '2px',\r\n      animation: 'circuitFlowVertical 8s linear infinite',\r\n    },\r\n    circuitNode: {\r\n      position: 'absolute',\r\n      width: '6px',\r\n      height: '6px',\r\n      background: 'radial-gradient(circle, rgba(0, 255, 157, 0.8), rgba(0, 136, 255, 0.4))',\r\n      borderRadius: '50%',\r\n      boxShadow: '0 0 12px rgba(0, 255, 157, 0.6), 0 0 24px rgba(0, 136, 255, 0.3)',\r\n      animation: 'nodePulse 4s ease-in-out infinite',\r\n    },\r\n    dataStream: {\r\n      position: 'absolute',\r\n      background: 'linear-gradient(90deg, transparent, rgba(0, 255, 157, 0.8), rgba(0, 204, 126, 0.6), transparent)',\r\n      borderRadius: '2px',\r\n      filter: 'blur(0.5px)',\r\n    },\r\n    dataStreamHorizontal: {\r\n      width: '80px',\r\n      height: '3px',\r\n      animation: 'streamFlowH 12s linear infinite',\r\n    },\r\n    dataStreamVertical: {\r\n      width: '3px',\r\n      height: '80px',\r\n      animation: 'streamFlowV 12s linear infinite',\r\n    },\r\n    ambientGlow: {\r\n      position: 'absolute',\r\n      borderRadius: '50%',\r\n      background: 'radial-gradient(circle, rgba(0, 136, 255, 0.15), rgba(0, 255, 157, 0.05), transparent)',\r\n      filter: 'blur(20px)',\r\n      animation: 'ambientBreath 15s ease-in-out infinite',\r\n    },\r\n    floatingDot: {\r\n      position: 'absolute',\r\n      width: '4px',\r\n      height: '4px',\r\n      background: 'rgba(0, 255, 157, 0.6)',\r\n      borderRadius: '50%',\r\n      boxShadow: '0 0 8px rgba(0, 255, 157, 0.4)',\r\n      animation: 'floatUp 20s linear infinite',\r\n    },\r\n  };\r\n\r\n  // CSS animations as a style element\r\n  const cssAnimations = `\r\n    @keyframes gridPulse {\r\n      0%, 100% { opacity: 0.3; }\r\n      50% { opacity: 0.6; }\r\n    }\r\n    \r\n    @keyframes circuitFlow {\r\n      0% { \r\n        background: linear-gradient(90deg, transparent, transparent, transparent, transparent, transparent);\r\n        box-shadow: none;\r\n      }\r\n      25% { \r\n        background: linear-gradient(90deg, transparent, rgba(0, 255, 157, 0.2), rgba(0, 136, 255, 0.3), transparent, transparent);\r\n        box-shadow: 0 0 5px rgba(0, 255, 157, 0.2);\r\n      }\r\n      50% { \r\n        background: linear-gradient(90deg, transparent, rgba(0, 255, 157, 0.4), rgba(0, 136, 255, 0.6), rgba(0, 255, 157, 0.4), transparent);\r\n        box-shadow: 0 0 10px rgba(0, 255, 157, 0.3), inset 0 0 5px rgba(0, 136, 255, 0.2);\r\n      }\r\n      75% { \r\n        background: linear-gradient(90deg, transparent, transparent, rgba(0, 255, 157, 0.3), rgba(0, 136, 255, 0.2), transparent);\r\n        box-shadow: 0 0 5px rgba(0, 136, 255, 0.2);\r\n      }\r\n      100% { \r\n        background: linear-gradient(90deg, transparent, transparent, transparent, transparent, transparent);\r\n        box-shadow: none;\r\n      }\r\n    }\r\n    \r\n    @keyframes circuitFlowVertical {\r\n      0% { \r\n        background: linear-gradient(180deg, transparent, transparent, transparent, transparent, transparent);\r\n        box-shadow: none;\r\n      }\r\n      25% { \r\n        background: linear-gradient(180deg, transparent, rgba(0, 255, 157, 0.2), rgba(0, 136, 255, 0.3), transparent, transparent);\r\n        box-shadow: 0 0 5px rgba(0, 255, 157, 0.2);\r\n      }\r\n      50% { \r\n        background: linear-gradient(180deg, transparent, rgba(0, 255, 157, 0.4), rgba(0, 136, 255, 0.6), rgba(0, 255, 157, 0.4), transparent);\r\n        box-shadow: 0 0 10px rgba(0, 255, 157, 0.3), inset 0 0 5px rgba(0, 136, 255, 0.2);\r\n      }\r\n      75% { \r\n        background: linear-gradient(180deg, transparent, transparent, rgba(0, 255, 157, 0.3), rgba(0, 136, 255, 0.2), transparent);\r\n        box-shadow: 0 0 5px rgba(0, 136, 255, 0.2);\r\n      }\r\n      100% { \r\n        background: linear-gradient(180deg, transparent, transparent, transparent, transparent, transparent);\r\n        box-shadow: none;\r\n      }\r\n    }\r\n    \r\n    @keyframes nodePulse {\r\n      0%, 100% { \r\n        transform: scale(1);\r\n        opacity: 0.6;\r\n        box-shadow: 0 0 12px rgba(0, 255, 157, 0.6), 0 0 24px rgba(0, 136, 255, 0.3);\r\n      }\r\n      50% { \r\n        transform: scale(1.3);\r\n        opacity: 1;\r\n        box-shadow: 0 0 20px rgba(0, 255, 157, 0.8), 0 0 40px rgba(0, 136, 255, 0.5);\r\n      }\r\n    }\r\n    \r\n    @keyframes streamFlowH {\r\n      0% { \r\n        left: -80px;\r\n        opacity: 0;\r\n        transform: scaleX(0.5);\r\n      }\r\n      10% { \r\n        opacity: 1;\r\n        transform: scaleX(1);\r\n      }\r\n      90% { \r\n        opacity: 1;\r\n        transform: scaleX(1);\r\n      }\r\n      100% { \r\n        left: 100vw;\r\n        opacity: 0;\r\n        transform: scaleX(0.5);\r\n      }\r\n    }\r\n    \r\n    @keyframes streamFlowV {\r\n      0% { \r\n        top: -80px;\r\n        opacity: 0;\r\n        transform: scaleY(0.5);\r\n      }\r\n      10% { \r\n        opacity: 1;\r\n        transform: scaleY(1);\r\n      }\r\n      90% { \r\n        opacity: 1;\r\n        transform: scaleY(1);\r\n      }\r\n      100% { \r\n        top: 100vh;\r\n        opacity: 0;\r\n        transform: scaleY(0.5);\r\n      }\r\n    }\r\n    \r\n    @keyframes ambientBreath {\r\n      0%, 100% { \r\n        transform: scale(1);\r\n        opacity: 0.3;\r\n      }\r\n      33% { \r\n        transform: scale(1.2);\r\n        opacity: 0.5;\r\n      }\r\n      66% { \r\n        transform: scale(0.8);\r\n        opacity: 0.2;\r\n      }\r\n    }\r\n    \r\n    @keyframes floatUp {\r\n      0% { \r\n        transform: translateY(0) translateX(0) scale(0);\r\n        opacity: 0;\r\n      }\r\n      10% { \r\n        transform: translateY(-10vh) translateX(5px) scale(1);\r\n        opacity: 1;\r\n      }\r\n      90% { \r\n        transform: translateY(-90vh) translateX(-5px) scale(1);\r\n        opacity: 0.8;\r\n      }\r\n      100% { \r\n        transform: translateY(-100vh) translateX(0) scale(0);\r\n        opacity: 0;\r\n      }\r\n    }\r\n    \r\n    @media (prefers-reduced-motion: reduce) {\r\n      * {\r\n        animation-duration: 0.01ms !important;\r\n        animation-iteration-count: 1 !important;\r\n      }\r\n    }\r\n  `;\r\n\r\n  useEffect(() => {\r\n    // Insert CSS animations into the document head\r\n    const styleElement = document.createElement('style');\r\n    styleElement.textContent = cssAnimations;\r\n    document.head.appendChild(styleElement);\r\n\r\n    const createSophisticatedBackground = () => {\r\n      const background = backgroundRef.current;\r\n      if (!background) return;\r\n\r\n      // Clear any existing elements\r\n      background.innerHTML = '';\r\n\r\n      const width = window.innerWidth;\r\n      const height = window.innerHeight;\r\n      \r\n      // Create grid pattern with embedded styles\r\n      createGridPattern(background);\r\n      \r\n      // Create elegant circuit lines\r\n      createCircuitGrid(background, width, height);\r\n      \r\n      // Create flowing data streams\r\n      createDataStreams(background, width, height);\r\n      \r\n      // Create ambient lighting effects\r\n      createAmbientEffects(background, width, height);\r\n      \r\n      // Create floating elements\r\n      createFloatingElements(background, width, height);\r\n    };\r\n\r\n    const createGridPattern = (background) => {\r\n      const grid = document.createElement('div');\r\n      Object.assign(grid.style, styles.gridPattern);\r\n      background.appendChild(grid);\r\n    };\r\n\r\n    const createCircuitGrid = (background, width, height) => {\r\n      // Create sophisticated circuit lines with embedded styles\r\n      const lineCount = Math.min(18, Math.floor((width + height) / 120));\r\n      \r\n      for (let i = 0; i < lineCount; i++) {\r\n        const line = document.createElement('div');\r\n        Object.assign(line.style, styles.circuitLine);\r\n        \r\n        const isHorizontal = Math.random() > 0.5;\r\n        \r\n        if (isHorizontal) {\r\n          Object.assign(line.style, styles.circuitLineHorizontal);\r\n          const lineWidth = Math.random() * 350 + 150;\r\n          const top = Math.random() * height;\r\n          const left = Math.random() * (width - lineWidth);\r\n          \r\n          line.style.top = `${top}px`;\r\n          line.style.left = `${left}px`;\r\n          line.style.width = `${lineWidth}px`;\r\n          line.style.animationDelay = `${Math.random() * 8}s`;\r\n          \r\n          // Add sophisticated connection nodes\r\n          if (Math.random() > 0.5) {\r\n            const node = document.createElement('div');\r\n            Object.assign(node.style, styles.circuitNode);\r\n            node.style.top = `${top - 3}px`;\r\n            node.style.left = `${left + lineWidth - 3}px`;\r\n            node.style.animationDelay = `${Math.random() * 4}s`;\r\n            background.appendChild(node);\r\n          }\r\n        } else {\r\n          Object.assign(line.style, styles.circuitLineVertical);\r\n          const lineHeight = Math.random() * 350 + 150;\r\n          const left = Math.random() * width;\r\n          const top = Math.random() * (height - lineHeight);\r\n          \r\n          line.style.top = `${top}px`;\r\n          line.style.left = `${left}px`;\r\n          line.style.height = `${lineHeight}px`;\r\n          line.style.animationDelay = `${Math.random() * 8}s`;\r\n          \r\n          // Add sophisticated connection nodes\r\n          if (Math.random() > 0.5) {\r\n            const node = document.createElement('div');\r\n            Object.assign(node.style, styles.circuitNode);\r\n            node.style.top = `${top + lineHeight - 3}px`;\r\n            node.style.left = `${left - 3}px`;\r\n            node.style.animationDelay = `${Math.random() * 4}s`;\r\n            background.appendChild(node);\r\n          }\r\n        }\r\n        \r\n        background.appendChild(line);\r\n      }\r\n    };\r\n\r\n    const createDataStreams = (background, width, height) => {\r\n      // Create dynamic data streams with embedded styles\r\n      const streamCount = 6 + Math.floor(Math.random() * 4);\r\n      \r\n      for (let i = 0; i < streamCount; i++) {\r\n        const stream = document.createElement('div');\r\n        Object.assign(stream.style, styles.dataStream);\r\n        \r\n        const isHorizontal = Math.random() > 0.3;\r\n        \r\n        if (isHorizontal) {\r\n          Object.assign(stream.style, styles.dataStreamHorizontal);\r\n          stream.style.top = `${Math.random() * height}px`;\r\n          stream.style.left = '-80px';\r\n        } else {\r\n          Object.assign(stream.style, styles.dataStreamVertical);\r\n          stream.style.left = `${Math.random() * width}px`;\r\n          stream.style.top = '-80px';\r\n        }\r\n        \r\n        stream.style.animationDelay = `${Math.random() * 12}s`;\r\n        stream.style.animationDuration = `${10 + Math.random() * 6}s`;\r\n        background.appendChild(stream);\r\n      }\r\n    };\r\n\r\n    const createAmbientEffects = (background, width, height) => {\r\n      // Create atmospheric ambient glows with embedded styles\r\n      const glowCount = 4 + Math.floor(Math.random() * 3);\r\n      \r\n      for (let i = 0; i < glowCount; i++) {\r\n        const glow = document.createElement('div');\r\n        Object.assign(glow.style, styles.ambientGlow);\r\n        \r\n        const size = 250 + Math.random() * 500;\r\n        glow.style.width = `${size}px`;\r\n        glow.style.height = `${size}px`;\r\n        glow.style.top = `${Math.random() * height - size / 2}px`;\r\n        glow.style.left = `${Math.random() * width - size / 2}px`;\r\n        glow.style.animationDelay = `${Math.random() * 15}s`;\r\n        glow.style.animationDuration = `${12 + Math.random() * 8}s`;\r\n        \r\n        // Vary the glow colors slightly\r\n        if (Math.random() > 0.5) {\r\n          glow.style.background = 'radial-gradient(circle, rgba(0, 255, 157, 0.12), rgba(0, 136, 255, 0.06), transparent)';\r\n        }\r\n        \r\n        background.appendChild(glow);\r\n      }\r\n    };\r\n\r\n    const createFloatingElements = (background, width, height) => {\r\n      // Create elegant floating particles with embedded styles\r\n      const dotCount = Math.min(12, Math.floor(width / 150));\r\n      \r\n      for (let i = 0; i < dotCount; i++) {\r\n        const dot = document.createElement('div');\r\n        Object.assign(dot.style, styles.floatingDot);\r\n        \r\n        dot.style.left = `${Math.random() * width}px`;\r\n        dot.style.top = `${height + 50}px`;\r\n        dot.style.animationDelay = `${Math.random() * 20}s`;\r\n        dot.style.animationDuration = `${18 + Math.random() * 8}s`;\r\n        \r\n        // Add size variation\r\n        const scale = 0.8 + Math.random() * 0.4;\r\n        dot.style.transform = `scale(${scale})`;\r\n        \r\n        background.appendChild(dot);\r\n      }\r\n    };\r\n\r\n    // Initial creation\r\n    createSophisticatedBackground();\r\n\r\n    // Recreate on window resize with debouncing for performance\r\n    let resizeTimeout;\r\n    const handleResize = () => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        createSophisticatedBackground();\r\n      }, 250);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      clearTimeout(resizeTimeout);\r\n      // Clean up style element\r\n      const styleElements = document.head.querySelectorAll('style');\r\n      styleElements.forEach(el => {\r\n        if (el.textContent.includes('gridPulse')) {\r\n          el.remove();\r\n        }\r\n      });\r\n    };\r\n  }, []);  return (\r\n    <div \r\n      ref={backgroundRef} \r\n      style={styles.circuitBackground}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CircuitBackground;","import React, { useEffect, useState } from 'react';\r\nimport './CustomCursor.css';\r\n\r\nconst CustomCursor = () => {\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [hidden, setHidden] = useState(true);\r\n  const [enlarged, setEnlarged] = useState(false);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let rafId;\r\n    const updateCursorPosition = (e) => {\r\n      // Use requestAnimationFrame for smoother cursor movement\r\n      cancelAnimationFrame(rafId);\r\n      rafId = requestAnimationFrame(() => {\r\n        setPosition({ x: e.clientX, y: e.clientY });\r\n        setHidden(false);\r\n      });\r\n    };\r\n\r\n    const handleMouseOver = (e) => {\r\n      const isDraggableElement = e.target.closest('#robot-assistant') !== null;\r\n      \r\n      if (e.target.tagName === 'A' || \r\n          e.target.tagName === 'BUTTON' || \r\n          e.target.classList.contains('robot-part') ||\r\n          e.target.classList.contains('nav-toggle') ||\r\n          e.target.classList.contains('language-item') ||\r\n          e.target.classList.contains('interest-item') ||\r\n          e.target.classList.contains('timeline-item') ||\r\n          e.target.classList.contains('robot-project') ||\r\n          e.target.classList.contains('control-btn')) {\r\n        setEnlarged(true);\r\n      } else {\r\n        setEnlarged(false);\r\n      }\r\n\r\n      // Update dragging state based on robot interaction\r\n      if (isDraggableElement) {\r\n        document.body.style.cursor = 'grab';\r\n      } else {\r\n        document.body.style.cursor = '';\r\n      }\r\n    };\r\n\r\n    const handleMouseDown = (e) => {\r\n      if (e.target.closest('#robot-assistant') !== null) {\r\n        setIsDragging(true);\r\n        document.body.style.cursor = 'grabbing';\r\n      }\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setIsDragging(false);\r\n      document.body.style.cursor = '';\r\n    };\r\n\r\n    const handleMouseOut = () => {\r\n      setHidden(true);\r\n    };\r\n\r\n    document.addEventListener('mousemove', updateCursorPosition);\r\n    document.addEventListener('mouseover', handleMouseOver);\r\n    document.addEventListener('mouseout', handleMouseOut);\r\n    document.addEventListener('mousedown', handleMouseDown);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', updateCursorPosition);\r\n      document.removeEventListener('mouseover', handleMouseOver);\r\n      document.removeEventListener('mouseout', handleMouseOut);\r\n      document.removeEventListener('mousedown', handleMouseDown);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n      cancelAnimationFrame(rafId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      className={`custom-cursor ${hidden ? 'hidden' : ''} ${enlarged ? 'enlarged' : ''} ${isDragging ? 'dragging' : ''}`}\r\n      style={{ \r\n        left: `${position.x}px`, \r\n        top: `${position.y}px`,\r\n        transform: 'translate(-50%, -50%)'\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomCursor;","import React from 'react';\r\nimport { useLanguage } from '../../context/LanguageContext';\r\nimport './LanguageSwitcher.css';\r\n\r\nconst LanguageSwitcher = () => {\r\n  const { language, toggleLanguage } = useLanguage();\r\n\r\n  return (\r\n    <button \r\n      className=\"language-switcher\"\r\n      onClick={toggleLanguage}\r\n      aria-label={`Switch to ${language === 'en' ? 'German' : 'English'}`}\r\n    >\r\n      {language === 'en' ? 'DE' : 'EN'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './LoadingPage.css';\r\n\r\nconst LoadingPage = ({ onLoadingComplete }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [loadingText, setLoadingText] = useState('SYSTEM_INIT...');\r\n  const [bootSequence, setBootSequence] = useState([]);\r\n  const [currentCommand, setCurrentCommand] = useState('');\r\n  const [isBootComplete, setIsBootComplete] = useState(false);\r\n  const [isTransitioning, setIsTransitioning] = useState(false);\r\n\r\n  const loadingSteps = [\r\n    'SYSTEM_INIT...',\r\n    'BOOTLOADER_v2.1.3',\r\n    'MCU_CALIBRATION',\r\n    'GPIO_INITIALIZATION',\r\n    'I2C_BUS_SCAN',\r\n    'SPI_INTERFACE_TEST',\r\n    'UART_COMM_READY',\r\n    'SENSOR_ARRAY_ONLINE',\r\n    'AI_MODULE_LOADED',\r\n    'SYSTEM_READY'\r\n  ];\r\n\r\n  const bootCommands = [\r\n    '> Checking hardware integrity...',\r\n    '> Loading firmware v3.2.1...',\r\n    '> Initializing GPIO pins [0x00-0xFF]',\r\n    '> Starting I2C communication protocol',\r\n    '> Calibrating ADC channels',\r\n    '> Loading neural network weights',\r\n    '> Establishing wireless connectivity',\r\n    '> System diagnostics complete'  ];\r\n\r\n  useEffect(() => {\r\n    let progressInterval;\r\n    let textIndex = 0;\r\n    let commandIndex = 0;\r\n\r\n    const updateProgress = () => {\r\n      setProgress(prev => {\r\n        const newProgress = prev + Math.random() * 12 + 3;\r\n        \r\n        // Update loading text based on progress\r\n        const stepIndex = Math.floor((newProgress / 100) * loadingSteps.length);\r\n        if (stepIndex !== textIndex && stepIndex < loadingSteps.length) {\r\n          textIndex = stepIndex;\r\n          setLoadingText(loadingSteps[stepIndex]);\r\n          \r\n          // Add boot command to sequence\r\n          if (commandIndex < bootCommands.length) {\r\n            setBootSequence(prev => [...prev, bootCommands[commandIndex]]);\r\n            setCurrentCommand(bootCommands[commandIndex]);\r\n            commandIndex++;\r\n          }\r\n        }\r\n\r\n        if (newProgress >= 100) {\r\n          clearInterval(progressInterval);\r\n          setLoadingText('BOOT_COMPLETE');\r\n          setCurrentCommand('> System ready - Click to enter dashboard');\r\n          setIsBootComplete(true);\r\n          return 100;\r\n        }\r\n        return newProgress;\r\n      });\r\n    };\r\n\r\n    // Auto-start the boot sequence\r\n    progressInterval = setInterval(updateProgress, 300);\r\n\r\n    return () => clearInterval(progressInterval);\r\n  }, [loadingSteps, bootCommands]);  const handleEnterDashboard = () => {\r\n    if (isTransitioning) return; // Prevent multiple clicks\r\n    \r\n    setIsTransitioning(true);\r\n    setCurrentCommand('> Launching embedded dashboard interface...');\r\n    \r\n    // Add transition animations sequence\r\n    setTimeout(() => {\r\n      setCurrentCommand('> Establishing secure connection...');\r\n    }, 500);\r\n    \r\n    setTimeout(() => {\r\n      setCurrentCommand('> Loading user interface modules...');\r\n    }, 1000);\r\n    \r\n    setTimeout(() => {\r\n      setCurrentCommand('> Interface ready - Welcome!');\r\n    }, 1500);\r\n    \r\n    setTimeout(() => {\r\n      onLoadingComplete();\r\n    }, 2500);\r\n  };\r\n\r\n  return (\r\n    <div className={`loading-page ${isTransitioning ? 'transitioning' : ''} ${isBootComplete ? 'boot-complete' : ''}`}>\r\n      <div className={`loading-container ${isTransitioning ? 'transitioning' : ''}`}>\r\n        {/* Microcontroller Board */}\r\n        <div className=\"mcu-board\">\r\n          <div className={`board-outline ${isTransitioning ? 'transitioning' : ''}`}>\r\n            {/* MCU Chip */}\r\n            <div className=\"mcu-chip\">\r\n              <div className=\"chip-label\">STM32F4</div>\r\n              <div className=\"chip-pins\">\r\n                {Array.from({ length: 8 }, (_, i) => (\r\n                  <div key={i} className={`pin pin-${i + 1}`}></div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Status LEDs */}\r\n            <div className=\"status-leds\">\r\n              <div className={`led power ${progress > 10 ? 'on' : ''}`}></div>\r\n              <div className={`led status ${progress > 30 ? 'on' : ''}`}></div>\r\n              <div className={`led comm ${progress > 60 ? 'on' : ''}`}></div>\r\n            </div>\r\n            \r\n            {/* Components */}\r\n            <div className=\"components\">\r\n              <div className=\"capacitor\"></div>\r\n              <div className=\"resistor\"></div>\r\n              <div className=\"crystal\"></div>\r\n            </div>\r\n            \r\n            {/* GPIO Pins */}\r\n            <div className=\"gpio-header\">\r\n              {Array.from({ length: 6 }, (_, i) => (\r\n                <div key={i} className=\"gpio-pin\"></div>\r\n              ))}\r\n            </div>          </div>\r\n        </div>\r\n\r\n        {/* Terminal Output */}\r\n        <div className={`terminal-output ${isTransitioning ? 'transitioning' : ''}`}>\r\n          <div className=\"terminal-header\">\r\n            <span className=\"terminal-title\">EMBEDDED_BOOTLOADER v2.1.3</span>\r\n            <div className=\"terminal-controls\">\r\n              <span className=\"control minimize\"></span>\r\n              <span className=\"control maximize\"></span>\r\n              <span className=\"control close\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"terminal-body\">\r\n            {bootSequence.map((command, index) => (\r\n              <div key={index} className=\"terminal-line\">\r\n                {command}\r\n                <span className=\"status-ok\">[OK]</span>\r\n              </div>            ))}\r\n\r\n            <div className={`terminal-line current ${isBootComplete ? 'clickable' : ''}`} \r\n                 onClick={isBootComplete && !isTransitioning ? handleEnterDashboard : undefined}>\r\n              {currentCommand}\r\n              <span className=\"blinking-cursor\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Enter Dashboard Button */}\r\n        {isBootComplete && !isTransitioning && (\r\n          <div className=\"start-button-container\">\r\n            <button className=\"start-button dashboard-button\" onClick={handleEnterDashboard}>\r\n              <div className=\"button-icon\">🚀</div>\r\n              <span className=\"button-text\">ENTER DASHBOARD</span>\r\n              <div className=\"button-underline\"></div>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* System Status */}\r\n        <div className=\"system-status\">\r\n          <div className=\"status-item\">\r\n            <span className=\"status-label\">CPU:</span>\r\n            <span className=\"status-value\">ARM Cortex-M4</span>\r\n          </div>\r\n          <div className=\"status-item\">\r\n            <span className=\"status-label\">FREQ:</span>\r\n            <span className=\"status-value\">168MHz</span>\r\n          </div>\r\n          <div className=\"status-item\">\r\n            <span className=\"status-label\">RAM:</span>\r\n            <span className=\"status-value\">192KB</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress Bar with Hex Values */}\r\n        <div className=\"progress-container\">\r\n          <div className=\"progress-header\">\r\n            <span className=\"loading-label\">{loadingText}</span>\r\n            <span className=\"hex-value\">0x{Math.floor(progress * 2.55).toString(16).toUpperCase().padStart(2, '0')}</span>\r\n          </div>\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${progress}%` }}\r\n            >\r\n              <div className=\"progress-scanner\"></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"progress-text\">{Math.round(progress)}% Complete</div>\r\n        </div>\r\n\r\n        {/* Data Stream Visualization */}\r\n        <div className=\"data-stream\">\r\n          <div className=\"stream-line\">\r\n            <span className=\"data-packet\">0xFF</span>\r\n            <span className=\"data-packet\">0x3A</span>\r\n            <span className=\"data-packet\">0xC7</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Circuit Pattern Background */}\r\n        <div className=\"circuit-background\">\r\n          <div className=\"circuit-trace trace-1\"></div>\r\n          <div className=\"circuit-trace trace-2\"></div>\r\n          <div className=\"circuit-trace trace-3\"></div>\r\n          <div className=\"circuit-via via-1\"></div>\r\n          <div className=\"circuit-via via-2\"></div>\r\n          <div className=\"circuit-via via-3\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Hero from './components/Hero/Hero';\r\nimport About from './components/About/About';\r\nimport Skills from './components/Skills/Skills';\r\nimport Experience from './components/Experience/Experience';\r\nimport Projects from './components/Projects/Projects';\r\nimport Languages from './components/Languages/Languages';\r\nimport Interests from './components/Interests/Interests';\r\nimport Contact from './components/Contact/Contact';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Footer from './components/Footer/Footer';  \r\nimport CircuitBackground from './components/CircuitBackground/CircuitBackground';\r\nimport CustomCursor from './components/CustomCursor/CustomCursor';\r\nimport LanguageSwitcher from './components/LanguageSwitcher/LanguageSwitcher';\r\nimport LoadingPage from './components/LoadingPage/LoadingPage';\r\nimport { LanguageProvider } from './context/LanguageContext';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Initialize intersection observer for animations\r\n    const observerOptions = {\r\n      threshold: 0.1,\r\n      rootMargin: '0px 0px -50px 0px'\r\n    };\r\n    \r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add('visible');\r\n          \r\n          // For progress bars and skill meters\r\n          if (entry.target.classList.contains('language-item') || entry.target.classList.contains('chip')) {\r\n            const progressBars = entry.target.querySelectorAll('.skill-progress');\r\n            progressBars.forEach(progressBar => {\r\n              const width = progressBar.getAttribute('data-width') + '%';\r\n              setTimeout(() => {\r\n                progressBar.style.width = width;\r\n              }, 300);\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }, observerOptions);\r\n    \r\n    // Observe elements only after loading is complete\r\n    if (!isLoading) {\r\n      document.querySelectorAll('.timeline-item, .language-item, .interest-item').forEach(item => {\r\n        observer.observe(item);\r\n      });\r\n    }\r\n    \r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [isLoading]);\r\n\r\n  const handleLoadingComplete = () => {\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Show loading page while loading\r\n  if (isLoading) {\r\n    return (\r\n      <LanguageProvider>\r\n        <LoadingPage onLoadingComplete={handleLoadingComplete} />\r\n      </LanguageProvider>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <LanguageProvider>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <CustomCursor />\r\n          <CircuitBackground />\r\n          <LanguageSwitcher />        \r\n          <Navigation onMenuOpenChange={(isOpen) => setMenuOpen(isOpen)} />\r\n        \r\n          <main>\r\n            <Hero />\r\n            <About />\r\n            <Skills />\r\n            <Experience />\r\n            <Projects />\r\n            <Languages />\r\n            <Interests />\r\n            <Contact />\r\n          </main>\r\n        \r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    </LanguageProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}